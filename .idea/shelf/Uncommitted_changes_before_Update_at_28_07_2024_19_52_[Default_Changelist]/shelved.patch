Index: конспекты/o-master/PythonQA/Lesson16/parser.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson16/parser.py b/конспекты/o-master/PythonQA/Lesson16/parser.py
new file mode 100644
--- /dev/null	(date 1722185149251)
+++ b/конспекты/o-master/PythonQA/Lesson16/parser.py	(date 1722185149251)
@@ -0,0 +1,32 @@
+import re
+from collections import Counter
+import json
+
+
+def reader(filename):
+
+    regexp = r"\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}"
+
+    with open(filename) as f:
+        log = f.read()
+
+        ips_list = re.findall(regexp, log)
+
+        print(ips_list)
+
+
+def count(ips_list):
+
+    count = Counter(ips_list)
+    return count
+
+
+def write_json(count):
+    with open('output.json', 'w') as json_file:
+        json.dump(count, 'output.json')
+
+
+if __name__== '__main__':
+    reader('access.log')
+
+    write_json(count(reader('access.log')))
\ No newline at end of file
Index: конспекты/o-master/PythonQA/Lesson16/perser_access_log.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson16/perser_access_log.py b/конспекты/o-master/PythonQA/Lesson16/perser_access_log.py
new file mode 100644
--- /dev/null	(date 1722185149252)
+++ b/конспекты/o-master/PythonQA/Lesson16/perser_access_log.py	(date 1722185149252)
@@ -0,0 +1,22 @@
+import re
+from collections import Counter
+import json
+
+
+def read_log(filename):
+
+    with open(filename) as f:
+        log = f.read()
+        ip_list = re.findall(r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}', log)
+        return ip_list
+
+
+def count_ip(ip_list):
+    count = Counter(ip_list)
+    return count
+
+
+if __name__ == '__main__':
+    res = count_ip(read_log('access2.log'))
+    with open('res.json', 'w') as f:
+        json.dump(res, f)
Index: конспекты/o-master/PythonQA/Lesson4/Loops/example1-loops.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson4/Loops/example1-loops.py b/конспекты/o-master/PythonQA/Lesson4/Loops/example1-loops.py
new file mode 100644
--- /dev/null	(date 1722185149259)
+++ b/конспекты/o-master/PythonQA/Lesson4/Loops/example1-loops.py	(date 1722185149259)
@@ -0,0 +1,16 @@
+# Prints out 0,1,2,3,4 and then it prints "count value reached 5"
+
+count = 0
+while count < 5:
+    print(count)
+    count += 1
+else:
+    print("count value reached %d" % count)
+
+# Prints out 1,2,3,4
+for i in range(1, 10):
+    if i % 5 == 0:
+        break
+    print(i)
+else:
+    print("this is not printed because for loop is terminated because of break but not due to fail in condition")
Index: конспекты/o-master/PythonQA/Lesson4/Iterators/example1-iterator.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson4/Iterators/example1-iterator.py b/конспекты/o-master/PythonQA/Lesson4/Iterators/example1-iterator.py
new file mode 100644
--- /dev/null	(date 1722185149257)
+++ b/конспекты/o-master/PythonQA/Lesson4/Iterators/example1-iterator.py	(date 1722185149257)
@@ -0,0 +1,18 @@
+# Python 2.7
+x = iter([1, 2, 3])
+print(dir(x))
+print(x)
+print(x.next())
+print(x.next())
+print(x.next())
+print(x.next())
+
+
+# Python 3.6
+x = iter([1, 2, 3])
+print(dir(x))
+print(x)
+print(x.__next__())
+print(x.__next__())
+print(x.__next__())
+print(x.__next__())
Index: конспекты/o-master/PythonQA/Lesson4/Iterators/example2-iterator-impl.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson4/Iterators/example2-iterator-impl.py b/конспекты/o-master/PythonQA/Lesson4/Iterators/example2-iterator-impl.py
new file mode 100644
--- /dev/null	(date 1722185149258)
+++ b/конспекты/o-master/PythonQA/Lesson4/Iterators/example2-iterator-impl.py	(date 1722185149258)
@@ -0,0 +1,26 @@
+# Only for python 3.+
+
+
+class countdown(object):
+    def __init__(self, start):
+        self.start = start
+
+    def __iter__(self):
+        return countdown_iter(self.start)
+
+
+class countdown_iter(object):
+    def __init__(self, count):
+        self.count = count
+
+    def __next__(self):
+        if self.count <= 0:
+            raise StopIteration
+        r = self.count
+        self.count -= 1
+        return r
+
+
+c = countdown(5)
+for i in c:
+    print(i, end=" ")
Index: конспекты/o-master/PythonQA/Lesson4/Iterators/example3-generator-expression.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson4/Iterators/example3-generator-expression.py b/конспекты/o-master/PythonQA/Lesson4/Iterators/example3-generator-expression.py
new file mode 100644
--- /dev/null	(date 1722185149258)
+++ b/конспекты/o-master/PythonQA/Lesson4/Iterators/example3-generator-expression.py	(date 1722185149258)
@@ -0,0 +1,5 @@
+b = (2*x for x in range(20))
+type(b)
+b.__next__()
+for i in b:
+    print(b, end=' ')
Index: конспекты/o-master/PythonQA/Lesson4/Iterators/example4-generator-function.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson4/Iterators/example4-generator-function.py b/конспекты/o-master/PythonQA/Lesson4/Iterators/example4-generator-function.py
new file mode 100644
--- /dev/null	(date 1722185149259)
+++ b/конспекты/o-master/PythonQA/Lesson4/Iterators/example4-generator-function.py	(date 1722185149259)
@@ -0,0 +1,24 @@
+import gzip, bz2
+
+from pathlib import Path
+
+
+def gen_open(paths):
+    for path in paths:
+        if path.suffix == '.gz':
+            yield gzip.open(path, 'rt')
+        elif path.suffix == '.bz2':
+            yield bz2.open(path, 'rt')
+        else:
+            yield open(path, 'rt')
+
+
+def gen_cat(sources):
+    for src in sources:
+        for item in src:
+            yield item
+
+
+lognames = Path('/usr/www').rglob("access-log*")
+logfiles = gen_open(lognames)
+loglines = gen_cat(logfiles)
Index: конспекты/o-master/PythonQA/Lesson4/File_management/data.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson4/File_management/data.txt b/конспекты/o-master/PythonQA/Lesson4/File_management/data.txt
new file mode 100644
--- /dev/null	(date 1722185149253)
+++ b/конспекты/o-master/PythonQA/Lesson4/File_management/data.txt	(date 1722185149253)
@@ -0,0 +1,4 @@
+some data to be written to the file
+some data to be written to the file
+some data to be written to the file
+some data to be written to the file
Index: конспекты/o-master/PythonQA/Lesson4/File_management/example1-rwo.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson4/File_management/example1-rwo.py b/конспекты/o-master/PythonQA/Lesson4/File_management/example1-rwo.py
new file mode 100644
--- /dev/null	(date 1722185149253)
+++ b/конспекты/o-master/PythonQA/Lesson4/File_management/example1-rwo.py	(date 1722185149253)
@@ -0,0 +1,6 @@
+with open('data.txt', 'w') as f:
+    data = 'some data to be written to the file'
+    f.write(data)
+    s = f.read()
+    print(s)
+
Index: конспекты/o-master/PythonQA/Lesson4/File_management/example2-readfile-generator.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson4/File_management/example2-readfile-generator.py b/конспекты/o-master/PythonQA/Lesson4/File_management/example2-readfile-generator.py
new file mode 100644
--- /dev/null	(date 1722185149254)
+++ b/конспекты/o-master/PythonQA/Lesson4/File_management/example2-readfile-generator.py	(date 1722185149254)
@@ -0,0 +1,4 @@
+with open("access-log") as wwwlog:
+    bytecolumn = (line.rsplit(None,1)[1] for line in wwwlog)
+    bytes_sent = (int(x) for x in bytecolumn if x != '-')
+    print("Total", sum(bytes_sent))
Index: конспекты/o-master/PythonQA/Lesson4/File_management/example3-rwb.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson4/File_management/example3-rwb.py b/конспекты/o-master/PythonQA/Lesson4/File_management/example3-rwb.py
new file mode 100644
--- /dev/null	(date 1722185149254)
+++ b/конспекты/o-master/PythonQA/Lesson4/File_management/example3-rwb.py	(date 1722185149254)
@@ -0,0 +1,15 @@
+"""
+Binary files store data in 0's and 1's that is machine readable.
+ A byte is collection of 8-bits. One character stores one byte in the memory that is 8-bits.
+  For example, the binary representation of character 'H' is 01001000 and convert this 8-bit binary string into decimal gives you 72
+"""
+
+binary_file = open("binary_file.bin",mode="wb+")
+text = "Hello World"
+encoded = text.encode("utf-8")
+binary_file.write(encoded)
+binary_file.seek(0)
+binary_data=binary_file.read()
+print("binary:",binary_data)
+text=binary_data.decode("utf-8")
+print("Decoded data:", text)
Index: конспекты/o-master/PythonQA/Lesson4/File_management/example4-rwb.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson4/File_management/example4-rwb.py b/конспекты/o-master/PythonQA/Lesson4/File_management/example4-rwb.py
new file mode 100644
--- /dev/null	(date 1722185149255)
+++ b/конспекты/o-master/PythonQA/Lesson4/File_management/example4-rwb.py	(date 1722185149255)
@@ -0,0 +1,11 @@
+f = open('workfile', 'rb+')
+f.write(b'0123456789abcdef')
+#16
+f.seek(5)      # Go to the 6th byte in the file
+#5
+f.read(1)
+#b'5'
+f.seek(-3, 2)  # Go to the 3rd byte before the end
+#13
+f.read(1)
+#b'd'
\ No newline at end of file
Index: конспекты/o-master/PythonQA/Lesson4/File_management/example5-encoding.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson4/File_management/example5-encoding.py b/конспекты/o-master/PythonQA/Lesson4/File_management/example5-encoding.py
new file mode 100644
--- /dev/null	(date 1722185149256)
+++ b/конспекты/o-master/PythonQA/Lesson4/File_management/example5-encoding.py	(date 1722185149256)
@@ -0,0 +1,8 @@
+with open("mynewtextfile.txt",mode="r") as file:
+    print("Default encoding:", file.encoding)
+    file.close()
+
+# change encoding to utf-8
+with open("mynewtextfile.txt",mode="r",encoding="utf-8") as file:
+    print("New encoding:", file.encoding)
+    file.close()
Index: конспекты/o-master/PythonQA/Lesson4/File_management/example6-fileobject.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson4/File_management/example6-fileobject.py b/конспекты/o-master/PythonQA/Lesson4/File_management/example6-fileobject.py
new file mode 100644
--- /dev/null	(date 1722185149256)
+++ b/конспекты/o-master/PythonQA/Lesson4/File_management/example6-fileobject.py	(date 1722185149256)
@@ -0,0 +1,13 @@
+with open("mynewtextfile.txt","w+") as f:
+    f.write("Otus we are learning python\nOtus we are learning python\nOtus we are learning python")
+    f.seek(0)
+    print(f.read())
+    print("Is readable:", f.readable())
+    print("Is writeable:", f.writable())
+    print("File no:", f.fileno())
+    print("Is connected to tty-like device:", f.isatty())
+    f.truncate(5)
+    f.flush()
+    f.seek(0)
+    print(f.read())
+f.close()
\ No newline at end of file
Index: конспекты/o-master/PythonQA/Lesson5/parallelrun/application.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson5/parallelrun/application.py b/конспекты/o-master/PythonQA/Lesson5/parallelrun/application.py
new file mode 100644
--- /dev/null	(date 1722185149260)
+++ b/конспекты/o-master/PythonQA/Lesson5/parallelrun/application.py	(date 1722185149260)
@@ -0,0 +1,14 @@
+from selenium import webdriver
+
+
+class Application:
+    def __init__(self, browser_name):
+        self.browser = browser_name
+        if self.browser == 'chrome':
+            self.wd = webdriver.Chrome()
+        else:
+            self.wd = webdriver.Firefox()
+
+    def test_smth(self):
+        self.wd.get("https://otus.ru/")
+        pass
Index: конспекты/o-master/PythonQA/Lesson5/parallelrun/my_test.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson5/parallelrun/my_test.py b/конспекты/o-master/PythonQA/Lesson5/parallelrun/my_test.py
new file mode 100644
--- /dev/null	(date 1722185149261)
+++ b/конспекты/o-master/PythonQA/Lesson5/parallelrun/my_test.py	(date 1722185149261)
@@ -0,0 +1,8 @@
+class TestSuit:
+    def test_1(self, app):
+        app.test_smth()
+        assert True
+
+    def test_2(self, app):
+        app.test_smth()
+        assert True
Index: конспекты/o-master/PythonQA/Lesson5/parallelrun/test_chrome.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson5/parallelrun/test_chrome.py b/конспекты/o-master/PythonQA/Lesson5/parallelrun/test_chrome.py
new file mode 100644
--- /dev/null	(date 1722185149261)
+++ b/конспекты/o-master/PythonQA/Lesson5/parallelrun/test_chrome.py	(date 1722185149261)
@@ -0,0 +1,8 @@
+from parallelrun.application import Application
+import pytest
+from parallelrun.my_test import TestSuit
+
+
+@pytest.fixture(scope='session')
+def app():
+    return Application('chrome')
Index: конспекты/o-master/PythonQA/Lesson5/parallelrun/test_firefox.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson5/parallelrun/test_firefox.py b/конспекты/o-master/PythonQA/Lesson5/parallelrun/test_firefox.py
new file mode 100644
--- /dev/null	(date 1722185149262)
+++ b/конспекты/o-master/PythonQA/Lesson5/parallelrun/test_firefox.py	(date 1722185149262)
@@ -0,0 +1,8 @@
+import application
+import pytest
+from parallelrun.my_test import TestSuit
+
+
+@pytest.fixture(scope='session')
+def app():
+    return application.Application('firefox')
\ No newline at end of file
Index: конспекты/python_qa_api-master/requirements.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/requirements.txt b/конспекты/python_qa_api-master/requirements.txt
new file mode 100644
--- /dev/null	(date 1722185149276)
+++ b/конспекты/python_qa_api-master/requirements.txt	(date 1722185149276)
@@ -0,0 +1,2 @@
+pytest==4.6.0
+requests==2.20.0
Index: конспекты/python_qa_api-master/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/.gitignore b/конспекты/python_qa_api-master/.gitignore
new file mode 100644
--- /dev/null	(date 1722185149264)
+++ b/конспекты/python_qa_api-master/.gitignore	(date 1722185149264)
@@ -0,0 +1,107 @@
+# Byte-compiled / optimized / DLL files
+__pycache__/
+*.py[cod]
+*$py.class
+.idea/
+.DS_Store
+.vscode
+
+# C extensions
+*.so
+
+# Distribution / packaging
+.Python
+build/
+develop-eggs/
+dist/
+downloads/
+eggs/
+.eggs/
+lib/
+lib64/
+parts/
+sdist/
+var/
+wheels/
+*.egg-info/
+.installed.cfg
+*.egg
+MANIFEST
+
+# PyInstaller
+#  Usually these files are written by a python script from a template
+#  before PyInstaller builds the exe, so as to inject date/other infos into it.
+*.manifest
+*.spec
+
+# Installer logs
+pip-log.txt
+pip-delete-this-directory.txt
+
+# Unit test / coverage reports
+htmlcov/
+.tox/
+.coverage
+.coverage.*
+.cache
+nosetests.xml
+coverage.xml
+*.cover
+.hypothesis/
+.pytest_cache/
+
+# Translations
+*.mo
+*.pot
+
+# Django stuff:
+*.log
+local_settings.py
+db.sqlite3
+
+# Flask stuff:
+instance/
+.webassets-cache
+
+# Scrapy stuff:
+.scrapy
+
+# Sphinx documentation
+docs/_build/
+
+# PyBuilder
+target/
+
+# Jupyter Notebook
+.ipynb_checkpoints
+
+# pyenv
+.python-version
+
+# celery beat schedule file
+celerybeat-schedule
+
+# SageMath parsed files
+*.sage.py
+
+# Environments
+.env
+.venv
+env/
+venv/
+ENV/
+env.bak/
+venv.bak/
+
+# Spyder project settings
+.spyderproject
+.spyproject
+
+# Rope project settings
+.ropeproject
+
+# mkdocs documentation
+/site
+
+# mypy
+.mypy_cache/
Index: конспекты/python_qa_api-master/LICENSE
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/LICENSE b/конспекты/python_qa_api-master/LICENSE
new file mode 100644
--- /dev/null	(date 1722185149275)
+++ b/конспекты/python_qa_api-master/LICENSE	(date 1722185149275)
@@ -0,0 +1,21 @@
+MIT License
+
+Copyright (c) 2019 konflic
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
Index: конспекты/python_qa_api-master/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/README.md b/конспекты/python_qa_api-master/README.md
new file mode 100644
--- /dev/null	(date 1722185149276)
+++ b/конспекты/python_qa_api-master/README.md	(date 1722185149276)
@@ -0,0 +1,10 @@
+
+# Тестирование API
+
+Код и примеры для занятия по тестированию API
+
+1) Аргументы командной строки, аргументы pytest
+2) requests, json
+3) Параметризация фикстур
+4) Тестирование API
+5) Декораторы
Index: конспекты/python_qa_api-master/5_decorators/0_what_is_function.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/5_decorators/0_what_is_function.py b/конспекты/python_qa_api-master/5_decorators/0_what_is_function.py
new file mode 100644
--- /dev/null	(date 1722185149271)
+++ b/конспекты/python_qa_api-master/5_decorators/0_what_is_function.py	(date 1722185149271)
@@ -0,0 +1,23 @@
+def foo(variable):
+    return 4 + variable
+
+
+for el in dir(foo):
+    print(el)
+
+# import  dis
+# print(foo.__name__)
+# print(foo.__code__.co_varnames)
+# print(foo.__code__.co_filename)
+# print(dis.dis(foo.__code__.co_code))
+
+
+# def foo_with_args(*args, **kwargs):
+#     print(args)
+#     print(kwargs)
+#     return "--------------"
+#
+# print(foo_with_args())
+# print(foo_with_args(1, 2, "Booo", {}))
+# print(foo_with_args(one=1, two=2, string="Booo", dicctionary={}))
+# print(foo_with_args(1, 2, "Booo", {}, one=1, two=2, string="Booo", dicctionary={}))
Index: конспекты/python_qa_api-master/5_decorators/1_function_as_variable.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/5_decorators/1_function_as_variable.py b/конспекты/python_qa_api-master/5_decorators/1_function_as_variable.py
new file mode 100644
--- /dev/null	(date 1722185149271)
+++ b/конспекты/python_qa_api-master/5_decorators/1_function_as_variable.py	(date 1722185149271)
@@ -0,0 +1,9 @@
+def make_hello(name: str):
+    return f'Hello, {name}'
+
+
+# Записали функцию в переменную
+some_variable = make_hello
+
+# Вызвали функцию из переменной
+print(some_variable('Vasiliy'))
Index: конспекты/python_qa_api-master/5_decorators/2_call_function_inside_function.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/5_decorators/2_call_function_inside_function.py b/конспекты/python_qa_api-master/5_decorators/2_call_function_inside_function.py
new file mode 100644
--- /dev/null	(date 1722185149272)
+++ b/конспекты/python_qa_api-master/5_decorators/2_call_function_inside_function.py	(date 1722185149272)
@@ -0,0 +1,9 @@
+def cool_hello(name: str):
+    def make_hello(some_name):
+        return f'Hello, {some_name}'
+
+    return f"[ * ===> {make_hello(name)} <=== * ]"
+
+
+# Смотрим что получилось
+print(cool_hello('Vasiliy'))
Index: конспекты/python_qa_api-master/5_decorators/3_function_as_parametr.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/5_decorators/3_function_as_parametr.py b/конспекты/python_qa_api-master/5_decorators/3_function_as_parametr.py
new file mode 100644
--- /dev/null	(date 1722185149272)
+++ b/конспекты/python_qa_api-master/5_decorators/3_function_as_parametr.py	(date 1722185149272)
@@ -0,0 +1,16 @@
+def make_hello(name: str):
+    return f'Hello, {name}'
+
+
+def make_bye_bye(name: str):
+    return f'Bye Bye, {name}'
+
+
+# Делаем функцию, которая вызывает внутри себя функцию
+def vasiliy_passer(func):
+    name = "Vasiliy"
+    return func(name)
+
+
+print(vasiliy_passer(make_hello))
+print(vasiliy_passer(make_bye_bye))
Index: конспекты/python_qa_api-master/5_decorators/4_function_return_function.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/5_decorators/4_function_return_function.py b/конспекты/python_qa_api-master/5_decorators/4_function_return_function.py
new file mode 100644
--- /dev/null	(date 1722185149273)
+++ b/конспекты/python_qa_api-master/5_decorators/4_function_return_function.py	(date 1722185149273)
@@ -0,0 +1,11 @@
+def function_return_function():
+    def inner_function():
+        print("Hi, I'm inner function!")
+
+    return inner_function
+
+
+# Сохраняем функцию в переменную
+some_variable = function_return_function()
+
+print(some_variable())
Index: конспекты/python_qa_api-master/5_decorators/5_function_closure.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/5_decorators/5_function_closure.py b/конспекты/python_qa_api-master/5_decorators/5_function_closure.py
new file mode 100644
--- /dev/null	(date 1722185149273)
+++ b/конспекты/python_qa_api-master/5_decorators/5_function_closure.py	(date 1722185149273)
@@ -0,0 +1,10 @@
+def comp_great_function(name):
+    def inner_function():
+        return f"Hello, {name}"
+
+    return inner_function
+
+
+great_vasiliy = comp_great_function("Vasiliy")
+
+print(great_vasiliy())
Index: конспекты/python_qa_api-master/5_decorators/6_basic_decorator.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/5_decorators/6_basic_decorator.py b/конспекты/python_qa_api-master/5_decorators/6_basic_decorator.py
new file mode 100644
--- /dev/null	(date 1722185149273)
+++ b/конспекты/python_qa_api-master/5_decorators/6_basic_decorator.py	(date 1722185149273)
@@ -0,0 +1,15 @@
+def hello_function(name):
+    return f"Hello, {name}"
+
+
+def make_cool(func):
+    def wrapper(name):
+        return f"[ * ==> {func(name).replace('Hello', 'Hey')} <== *]"
+
+    return wrapper
+
+
+cool_hello = make_cool(hello_function)
+
+print(hello_function("Vasiliy!"))
+print(cool_hello("Vasiliy"))
Index: конспекты/python_qa_api-master/5_decorators/7_syntax_sugar_for_deccorator.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/5_decorators/7_syntax_sugar_for_deccorator.py b/конспекты/python_qa_api-master/5_decorators/7_syntax_sugar_for_deccorator.py
new file mode 100644
--- /dev/null	(date 1722185149274)
+++ b/конспекты/python_qa_api-master/5_decorators/7_syntax_sugar_for_deccorator.py	(date 1722185149274)
@@ -0,0 +1,13 @@
+def make_cool(func):
+    def wrapper(name):
+        return f"[ * ==> {func(name).replace('Hello', 'Hey')} <== *]"
+
+    return wrapper
+
+
+@make_cool
+def hello_function(name):
+    return f"Hello, {name}"
+
+
+print(hello_function("Vasiliy!"))
Index: конспекты/python_qa_api-master/5_decorators/8_multiple_decorators.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/5_decorators/8_multiple_decorators.py b/конспекты/python_qa_api-master/5_decorators/8_multiple_decorators.py
new file mode 100644
--- /dev/null	(date 1722185149274)
+++ b/конспекты/python_qa_api-master/5_decorators/8_multiple_decorators.py	(date 1722185149274)
@@ -0,0 +1,37 @@
+def add_brackets(func):
+    def wrapper(name):
+        return f"[ {func(name)} ]"
+
+    return wrapper
+
+
+def add_arrows(func):
+    def wrapper(name):
+        return f" ==> {func(name)} <== "
+
+    return wrapper
+
+
+def add_stars(func):
+    def wrapper(name):
+        return f" * {func(name)} * "
+
+    return wrapper
+
+
+def make_hawaii(func):
+    def wrapper(name):
+        return f"{func(name).replace('Hello', 'Aloha')}"
+
+    return wrapper
+
+
+@make_hawaii
+@add_stars
+@add_arrows
+@add_brackets
+def hello_function(name):
+    return f"Hello, {name}"
+
+
+print(hello_function("Vasiliy"))
Index: конспекты/python_qa_api-master/5_decorators/9_params_to_decorators.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/5_decorators/9_params_to_decorators.py b/конспекты/python_qa_api-master/5_decorators/9_params_to_decorators.py
new file mode 100644
--- /dev/null	(date 1722185149275)
+++ b/конспекты/python_qa_api-master/5_decorators/9_params_to_decorators.py	(date 1722185149275)
@@ -0,0 +1,62 @@
+def localization(region):
+    if region == "Italy":
+        ln_hello = "Ciao"
+    elif region == "Russia":
+        ln_hello = "Privet"
+    elif region == "Hawaii":
+        ln_hello = "Aloha"
+    else:
+        raise Exception("Region is not supported!")
+
+    def decorator(func):
+        def wrapper(name):
+            return f"{func(name).replace('Hello', ln_hello)}"
+
+        return wrapper
+
+    return decorator
+
+
+@localization("Italy")
+def hello_function(name):
+    return f"Hello, {name}"
+
+
+print(hello_function("Vasiliy"))
+
+
+@localization("Russia")
+def hello_function(name):
+    return f"Hello, {name}"
+
+
+print(hello_function("Vasiliy"))
+
+
+@localization("Hawaii")
+def hello_function(name):
+    return f"Hello, {name}"
+
+
+print(hello_function("Vasiliy"))
+
+
+# Второй пример, почти как в pytest
+
+def numbers(*args, **kwargs):
+    def decorator(func):
+        for item in args:
+            func(item)
+        # for key, value in enumerate(kwargs):
+        #     print(key, value)
+
+    return decorator
+
+
+@numbers(1, 2, 3, 4, 5, 6, 7)
+def equality_test(n, target=3):
+    try:
+        assert n > target
+        print(f"Correct: {n} is greater than {target}")
+    except AssertionError:
+        print(f"Wrong: {n} is less than {target}")
Index: конспекты/python_qa_api-master/0_argparse/1_sys_args_method.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/0_argparse/1_sys_args_method.py b/конспекты/python_qa_api-master/0_argparse/1_sys_args_method.py
new file mode 100644
--- /dev/null	(date 1722185149265)
+++ b/конспекты/python_qa_api-master/0_argparse/1_sys_args_method.py	(date 1722185149265)
@@ -0,0 +1,12 @@
+import sys
+
+print(sys.argv)
+
+args = sys.argv
+
+
+def calculate(num1, num2):
+    return num1 + num2
+
+
+print(calculate(args[1], args[2]))
Index: конспекты/python_qa_api-master/0_argparse/2_argparse_method.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/0_argparse/2_argparse_method.py b/конспекты/python_qa_api-master/0_argparse/2_argparse_method.py
new file mode 100644
--- /dev/null	(date 1722185149266)
+++ b/конспекты/python_qa_api-master/0_argparse/2_argparse_method.py	(date 1722185149266)
@@ -0,0 +1,62 @@
+import argparse
+
+parser = argparse.ArgumentParser()
+
+"""
+    Все параметры для add_argument
+    
+    name or flags - Either a name or a list of option strings, e.g. foo or -f, --foo.
+    action - The basic type of action to be taken when this argument is encountered at the command line.
+    nargs - The number of command-line arguments that should be consumed.
+    const - A constant value required by some action and nargs selections.
+    default - The value produced if the argument is absent from the command line.
+    type - The type to which the command-line argument should be converted.
+    choices - A container of the allowable values for the argument.
+    required - Whether or not the command-line option may be omitted (optionals only).
+    help - A brief description of what the argument does.
+    metavar - A name for the argument in usage messages.
+    dest - The name of the attribute to be added to the object returned by parse_args().
+
+"""
+
+parser.add_argument('--method', '-m',
+                    action='store',
+                    help='Method to make request',
+                    default='GET')
+
+parser.add_argument('--url', '-u',
+                    action='store',
+                    help='Url to make request to',
+                    required=True)
+
+# Если параметр передан то Ture, иначе False
+parser.add_argument('--true', '-t',
+                    action='store_true',
+                    help='True or false param',
+                    required=False)
+
+# Добавляение значений в список по параметру
+# python3 2_argparse_method.py --url=ya.ru -s
+parser.add_argument('--save', '-s',
+                    action='append_const',
+                    const='const_to_save',
+                    dest='const_collection',
+                    default=[],
+                    help='Store params in list',
+                    required=False)
+
+# Добавляение значений в список по параметру
+# python3 2_argparse_method.py --url=ya.ru -s -s2
+parser.add_argument('--save2', '-s2',
+                    action='append_const',
+                    const='const_to_save2',
+                    dest='const_collection',
+                    default=[],
+                    help='Store params in list',
+                    required=False)
+
+# Парсим всё что положили
+args = parser.parse_args()
+
+# Это словарь из которого аргументы можно доставать
+print(args)
Index: конспекты/python_qa_api-master/00_repeat/.gitkeep
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/00_repeat/.gitkeep b/конспекты/python_qa_api-master/00_repeat/.gitkeep
new file mode 100644
--- /dev/null	(date 1722185149264)
+++ b/конспекты/python_qa_api-master/00_repeat/.gitkeep	(date 1722185149264)
@@ -0,0 +1,3 @@
+Написание тестовых функций
+Запуск тестов
+Фикстуры
Index: конспекты/python_qa_api-master/2_requests_json/json_example.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/2_requests_json/json_example.py b/конспекты/python_qa_api-master/2_requests_json/json_example.py
new file mode 100644
--- /dev/null	(date 1722185149267)
+++ b/конспекты/python_qa_api-master/2_requests_json/json_example.py	(date 1722185149267)
@@ -0,0 +1,21 @@
+import json
+
+# Парсинг данных из строки
+data = '{"key1": 1, "key2": "2", "key3": [1, 2, 3]}'
+
+parsed_data = json.loads(data)
+
+# Данные парсятся согласно типам данных
+print(type(parsed_data))
+print(parsed_data['key1'] + 1)
+print(type(parsed_data['key3']))
+
+print("\n--------------------------------------------\n")
+
+# преобразование данных в строку
+data_dict = {'key': 1, 1: 'one', 'list': [1, 2, 3]}
+
+parsed_to_string_data = json.dumps(data_dict)
+
+print(parsed_to_string_data)
+print(type(parsed_to_string_data))
Index: конспекты/python_qa_api-master/2_requests_json/requests_example.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/2_requests_json/requests_example.py b/конспекты/python_qa_api-master/2_requests_json/requests_example.py
new file mode 100644
--- /dev/null	(date 1722185149268)
+++ b/конспекты/python_qa_api-master/2_requests_json/requests_example.py	(date 1722185149268)
@@ -0,0 +1,17 @@
+import pprint
+import requests
+
+r = requests.get('https://jsonplaceholder.typicode.com/posts/1')
+
+print("\n------- status/headers/encoding ---------")
+print(r.status_code)
+print(r.headers['content-type'])
+print(r.encoding)
+print("\n----------------- text ------------------")
+print(r.text)
+print("\n----------------- json ------------------")
+print(pprint.pprint(r.json()))
+print("\n---------------- headers ----------------")
+for key, value in r.headers.items():
+    print(key, ' => ', value)
+
Index: конспекты/python_qa_api-master/4_api_testing/API.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/4_api_testing/API.md b/конспекты/python_qa_api-master/4_api_testing/API.md
new file mode 100644
--- /dev/null	(date 1722185149270)
+++ b/конспекты/python_qa_api-master/4_api_testing/API.md	(date 1722185149270)
@@ -0,0 +1,28 @@
+## Что такое API?
+
+Application programming interface (API) is a set of subroutine definitions, communication protocols, and tools for building software. In general terms, it is a set of clearly defined methods of communication among various components. A good API makes it easier to develop a computer program by providing all the building blocks, which are then put together by the programmer. 
+
+## Что такое REST?
+
+Representational State Transfer (REST) is a software architectural style that defines a set of constraints to be used for creating Web services. Web services that conform to the REST architectural style, called RESTful Web services (RWS), provide interoperability between computer systems on the Internet. RESTful Web services allow the requesting systems to access and manipulate textual representations of Web resources by using a uniform and predefined set of stateless operations. Other kinds of Web services, such as SOAP Web services, expose their own arbitrary sets of operations.
+
+### SOAP (Simple Object Access Protocol)
+
+Стандарт: https://www.w3.org/TR/soap12/
+
+## Примеры API:
+
+https://api.spacexdata.com/ - SpaceX
+
+https://jsonplaceholder.typicode.com/ - Тестовое API
+(Хорошее описание http://qaru.site/questions/112998/what-is-the-difference-between-put-post-and-patch)
+
+https://rapidapi.com/ - Библиотека разных API
+
+https://www.cbr-xml-daily.ru/ - API Центробанка
+
+## Реализации:
+
+- Всегда 200, коды ошибок и ответов внутри ответа (Поддержка GET, POST)
+
+- Могут быть различные коды ответов (PUT, PATCH, DELETE ... ) 
Index: конспекты/python_qa_api-master/4_api_testing/conftest.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/4_api_testing/conftest.py b/конспекты/python_qa_api-master/4_api_testing/conftest.py
new file mode 100644
--- /dev/null	(date 1722185149270)
+++ b/конспекты/python_qa_api-master/4_api_testing/conftest.py	(date 1722185149270)
@@ -0,0 +1,34 @@
+import pytest
+import requests
+
+
+class APIClient:
+    """
+    Упрощенный клиент для работы с API
+    Инициализируется базовым url на который пойдут запросы
+    """
+    def __init__(self, base_address):
+        self.base_address = base_address
+
+    def post(self, path="/", params=None, data=None, headers=None):
+        url = self.base_address + path
+        return requests.post(url=url, params=params, data=data, headers=headers)
+
+    def get(self, path="/", params=None):
+        return requests.get(url=self.base_address + path, params=params)
+
+
+# Тестовое API: https://jsonplaceholder.typicode.com
+def pytest_addoption(parser):
+    parser.addoption(
+        "--url",
+        action="store",
+        default="https://ya.ru",
+        help="This is request url"
+    )
+
+
+@pytest.fixture(scope="session")
+def api_client(request):
+    base_url = request.config.getoption("--url")
+    return APIClient(base_address=base_url)
Index: конспекты/python_qa_api-master/4_api_testing/test_api_example1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/4_api_testing/test_api_example1.py b/конспекты/python_qa_api-master/4_api_testing/test_api_example1.py
new file mode 100644
--- /dev/null	(date 1722185149270)
+++ b/конспекты/python_qa_api-master/4_api_testing/test_api_example1.py	(date 1722185149270)
@@ -0,0 +1,43 @@
+import pytest
+import random
+
+
+@pytest.mark.parametrize('input_id, output_id',
+                         [(10000, '10000'), (-1, '-1'), (0, '0')])
+@pytest.mark.parametrize('input_title, output_title',
+                         [('title', 'title'), ('', ''), (100, '100'), ('&', '&')])
+def test_api_post_request(api_client, input_id, output_id, input_title, output_title):
+    res = api_client.post(
+        path="/posts",
+        data={'title': input_title,
+              'body': 'bar',
+              'userId': input_id
+              }).json()
+    assert res['title'] == output_title
+    assert res['body'] == 'bar'
+    assert res['userId'] == output_id
+
+
+# Параметр фильтрации постов по Id пользователя
+# https://jsonplaceholder.typicode.com/posts?userId=1
+@pytest.mark.parametrize('userId', [-1, 0])
+def test_api_filtering(api_client, userId):
+    res = api_client.get(
+        path="/posts",
+        params={'userId': userId}
+    )
+    # Проверяем что на таких данных ответ пустой
+    assert res.json() == []
+
+
+# Параметр фильтрации постов по Id пользователя
+# https://jsonplaceholder.typicode.com/posts?userId=1
+@pytest.mark.parametrize('userId, userId_in_response', [(1, 1), (2, 2)])
+def test_api_filtering(api_client, userId, userId_in_response):
+    response = api_client.get(
+        path="/posts",
+        params={'userId': userId}
+    )
+    # Проверка что случайный пост от пользователя с ожидаемым id
+    random_post_number = random.randint(1, 10)
+    assert response.json()[random_post_number]['userId'] == userId_in_response
Index: конспекты/python_qa_api-master/1_pytest_addoption/test_demo_param.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/1_pytest_addoption/test_demo_param.py b/конспекты/python_qa_api-master/1_pytest_addoption/test_demo_param.py
new file mode 100644
--- /dev/null	(date 1722185149267)
+++ b/конспекты/python_qa_api-master/1_pytest_addoption/test_demo_param.py	(date 1722185149267)
@@ -0,0 +1,7 @@
+def test_answer(url_param):
+    if url_param == "ya.ru":
+        print("YAAAAANDEX")
+    elif url_param == "google.com":
+        print("GOOOGLE!")
+    else:
+        print("DuckDuckGOOOOO")
Index: конспекты/python_qa_api-master/1_pytest_addoption/conftest.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/1_pytest_addoption/conftest.py b/конспекты/python_qa_api-master/1_pytest_addoption/conftest.py
new file mode 100644
--- /dev/null	(date 1722185149266)
+++ b/конспекты/python_qa_api-master/1_pytest_addoption/conftest.py	(date 1722185149266)
@@ -0,0 +1,15 @@
+import pytest
+
+
+def pytest_addoption(parser):
+    parser.addoption(
+        "--url",
+        action="store",
+        default="https://ya.ru",
+        help="This is request url"
+    )
+
+
+@pytest.fixture
+def url_param(request):
+    return request.config.getoption("--url")
Index: конспекты/python_qa_api-master/3_fixtures_parametrization/test_fixtures_class_parametrization.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/3_fixtures_parametrization/test_fixtures_class_parametrization.py b/конспекты/python_qa_api-master/3_fixtures_parametrization/test_fixtures_class_parametrization.py
new file mode 100644
--- /dev/null	(date 1722185149268)
+++ b/конспекты/python_qa_api-master/3_fixtures_parametrization/test_fixtures_class_parametrization.py	(date 1722185149268)
@@ -0,0 +1,12 @@
+import pytest
+
+
+@pytest.mark.parametrize("test_input", [1, 2, 3])
+class TestClassParametrized:
+
+    # Все функци должны использовать аргумент
+    def test_one(self, test_input):
+        pass
+
+    def test_two(self, test_input):
+        pass
Index: конспекты/python_qa_api-master/3_fixtures_parametrization/test_fixtures_parametrization.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/3_fixtures_parametrization/test_fixtures_parametrization.py b/конспекты/python_qa_api-master/3_fixtures_parametrization/test_fixtures_parametrization.py
new file mode 100644
--- /dev/null	(date 1722185149269)
+++ b/конспекты/python_qa_api-master/3_fixtures_parametrization/test_fixtures_parametrization.py	(date 1722185149269)
@@ -0,0 +1,28 @@
+import pytest
+
+
+# Параметризация фикстурой
+def test_parametrized_with_fixture(fixture_with_params):
+    print("\nThe value from fixture = ", fixture_with_params)
+    assert fixture_with_params > 2
+
+
+# Параметризация одним параметром
+@pytest.mark.parametrize("test_input", [1, 2, 3])
+def test_parametrize_with_mark_single(test_input):
+    assert test_input < 3
+
+
+# Использование нескольких параметров
+@pytest.mark.parametrize("test_input, expected", [("3+5", 8), ("2+4", 6), ("6*9", 42)],
+                         ids=["Three + Five", "Two + Four", "Six by Nine"])
+def test_parametrize_with_mark_multiple(test_input, expected):
+    assert eval(test_input) == expected
+
+
+# Вложенная параметризация
+# Можно добавить
+@pytest.mark.parametrize("x", [0, 1])
+@pytest.mark.parametrize("y", [2, 3])
+def test_foo(x, y):
+    print(x, y)
Index: конспекты/python_qa_api-master/3_fixtures_parametrization/conftest.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_api-master/3_fixtures_parametrization/conftest.py b/конспекты/python_qa_api-master/3_fixtures_parametrization/conftest.py
new file mode 100644
--- /dev/null	(date 1722185149268)
+++ b/конспекты/python_qa_api-master/3_fixtures_parametrization/conftest.py	(date 1722185149268)
@@ -0,0 +1,11 @@
+import pytest
+
+
+@pytest.fixture(params=[1, 2, 3, 4])
+def fixture_with_params(request):
+    return request.param
+
+
+@pytest.fixture(scope="function", params=[("one", 1), ("two", 2), ("three", 3)])
+def param_test(request):
+    return request.param
Index: конспекты/python_qa_pytest-master/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/.gitignore b/конспекты/python_qa_pytest-master/.gitignore
new file mode 100644
--- /dev/null	(date 1722185149277)
+++ b/конспекты/python_qa_pytest-master/.gitignore	(date 1722185149277)
@@ -0,0 +1,107 @@
+# Byte-compiled / optimized / DLL files
+__pycache__/
+*.py[cod]
+*$py.class
+.idea/
+.DS_Store
+.vscode
+
+# C extensions
+*.so
+
+# Distribution / packaging
+.Python
+build/
+develop-eggs/
+dist/
+downloads/
+eggs/
+.eggs/
+lib/
+lib64/
+parts/
+sdist/
+var/
+wheels/
+*.egg-info/
+.installed.cfg
+*.egg
+MANIFEST
+
+# PyInstaller
+#  Usually these files are written by a python script from a template
+#  before PyInstaller builds the exe, so as to inject date/other infos into it.
+*.manifest
+*.spec
+
+# Installer logs
+pip-log.txt
+pip-delete-this-directory.txt
+
+# Unit test / coverage reports
+htmlcov/
+.tox/
+.coverage
+.coverage.*
+.cache
+nosetests.xml
+coverage.xml
+*.cover
+.hypothesis/
+.pytest_cache/
+
+# Translations
+*.mo
+*.pot
+
+# Django stuff:
+*.log
+local_settings.py
+db.sqlite3
+
+# Flask stuff:
+instance/
+.webassets-cache
+
+# Scrapy stuff:
+.scrapy
+
+# Sphinx documentation
+docs/_build/
+
+# PyBuilder
+target/
+
+# Jupyter Notebook
+.ipynb_checkpoints
+
+# pyenv
+.python-version
+
+# celery beat schedule file
+celerybeat-schedule
+
+# SageMath parsed files
+*.sage.py
+
+# Environments
+.env
+.venv
+env/
+venv/
+ENV/
+env.bak/
+venv.bak/
+
+# Spyder project settings
+.spyderproject
+.spyproject
+
+# Rope project settings
+.ropeproject
+
+# mkdocs documentation
+/site
+
+# mypy
+.mypy_cache/
Index: конспекты/python_qa_pytest-master/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/README.md b/конспекты/python_qa_pytest-master/README.md
new file mode 100644
--- /dev/null	(date 1722185149290)
+++ b/конспекты/python_qa_pytest-master/README.md	(date 1722185149290)
@@ -0,0 +1,9 @@
+# Введение в PyTest
+
+1) Введение в pytest
+2) Начало работы с фикстурами
+3) Scope и Autouse у фикстур
+4) Объект request, finalizer
+5) Возвращение значений из фикстур
+6) Введение в параметризацию
+7) Обзор структур данных
Index: конспекты/python_qa_pytest-master/requirements.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/requirements.txt b/конспекты/python_qa_pytest-master/requirements.txt
new file mode 100644
--- /dev/null	(date 1722185149291)
+++ b/конспекты/python_qa_pytest-master/requirements.txt	(date 1722185149291)
@@ -0,0 +1,1 @@
+pytest==4.6.0
Index: конспекты/python_qa_pytest-master/LICENSE
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/LICENSE b/конспекты/python_qa_pytest-master/LICENSE
new file mode 100644
--- /dev/null	(date 1722185149290)
+++ b/конспекты/python_qa_pytest-master/LICENSE	(date 1722185149290)
@@ -0,0 +1,21 @@
+MIT License
+
+Copyright (c) 2019 konflic
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
Index: конспекты/python_qa_pytest-master/conftest.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/conftest.py b/конспекты/python_qa_pytest-master/conftest.py
new file mode 100644
--- /dev/null	(date 1722185149291)
+++ b/конспекты/python_qa_pytest-master/conftest.py	(date 1722185149291)
@@ -0,0 +1,5 @@
+import pytest
+
+# @pytest.fixture()
+# def first_fixture():
+#     print("\nPrint from 'first_fixture' in conftest.py root")
Index: конспекты/python_qa_pytest-master/7_bonus_data_structures/1_list.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/7_bonus_data_structures/1_list.py b/конспекты/python_qa_pytest-master/7_bonus_data_structures/1_list.py
new file mode 100644
--- /dev/null	(date 1722185149285)
+++ b/конспекты/python_qa_pytest-master/7_bonus_data_structures/1_list.py	(date 1722185149285)
@@ -0,0 +1,78 @@
+# CRUD (create, remove, update, delete)
+l = []
+print("Type: ", type(l))
+
+l.append(1)
+l.append('1 ')
+l.extend([2,3,4])
+print("l -> ", l)
+
+l[0] = "One"
+l.insert(1, 103)
+print("len of l -> ", len(l))
+print("l -> ", l)
+
+# del l[0]
+print("l -> ", l)
+
+print("3 in l -> ", l.count(3), "times")
+print(l.pop(), l) # index or last
+
+# del l
+print("l -> ", l)
+
+# Comprehension
+l = [x for x in range(50) if x % 2 == 0]
+print(l)
+
+# Slice
+l = [x for x in range(50) if x % 2 == 0]
+print(l[5:30:2])
+
+# Iterate
+l = [1,2,3,4,5]
+for i in l:
+    print(i)
+
+# Copy list
+l1 = [1,2,3]
+l3 = l1
+l3.extend(['+', '+', '+'])
+print(l1)
+# First copy option
+l3 = l1.copy()
+l3.extend([8,9,10])
+print(l3, l1)
+# Second copy option
+l4 = l1[:]
+l4.extend(['+', '+', '+'])
+print(l4, l1)
+
+# Reverse list
+print("\n----Reverse----")
+# Option 1 list().reverse()
+l = [1,2,3,4,5,6]
+
+# .reverse возвращает none, он меняет порядок элементов в списке, не создавая новый список
+lr = l.reverse()
+
+# изначальный внутри себя перевернется, но lr = none
+print(l, lr)
+print("\n")
+# Option 2 reversed(list())
+l = [1,2,3,4,5,6]
+lr = reversed(l)
+print(l, lr)
+print(l, list(lr))
+print(l, lr)
+print(l, list(lr))
+
+# option 3
+lr = l[::-1]
+
+print(l, lr)
+print(l, list(lr))
+print(l, lr)
+print(l, list(lr))
+print("Type: ", type(lr))
+
Index: конспекты/python_qa_pytest-master/7_bonus_data_structures/2_tuple.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/7_bonus_data_structures/2_tuple.py b/конспекты/python_qa_pytest-master/7_bonus_data_structures/2_tuple.py
new file mode 100644
--- /dev/null	(date 1722185149285)
+++ b/конспекты/python_qa_pytest-master/7_bonus_data_structures/2_tuple.py	(date 1722185149285)
@@ -0,0 +1,25 @@
+# CRUD (create, remove, update, delete)
+
+t = (1,2,3)
+t2 = tuple((1,2,3,4))
+print(type(t), t)
+print(type(t2), t2)
+print(t[1])
+
+# Unchangeable
+# t[1] = 1
+
+# Iterate
+# t = (1,2,3)
+# for i in t:
+#     print(i)
+
+# Get len
+# t = (1,2,3)
+# print(len(t), t)
+
+# Can be a key
+# d = {'1': 'string', (1,2,3): 'tuple'}
+# print(d[(1,2,3)])
+
+# Unordered
Index: конспекты/python_qa_pytest-master/7_bonus_data_structures/3_set.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/7_bonus_data_structures/3_set.py b/конспекты/python_qa_pytest-master/7_bonus_data_structures/3_set.py
new file mode 100644
--- /dev/null	(date 1722185149286)
+++ b/конспекты/python_qa_pytest-master/7_bonus_data_structures/3_set.py	(date 1722185149286)
@@ -0,0 +1,30 @@
+# CRUD (create, remove, update, delete)
+
+s = set()
+
+s.add('1')
+s.add('2')
+s.add('3')
+s.add('1')
+s.add('1')
+
+print(s)
+print('pop el ->', s.pop())
+print('len -> ', len(s))
+
+# delete
+# del s
+# print(s)
+
+# Для чего использовать?
+
+# Inititate
+s1 = {1,2,3,4}
+s2 = {3,4,5,6}
+
+# Intersection
+print(s1.intersection(s2))
+
+# Difference
+print(s1.difference(s2))
+print(s2.difference(s1))
Index: конспекты/python_qa_pytest-master/7_bonus_data_structures/4_dict.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/7_bonus_data_structures/4_dict.py b/конспекты/python_qa_pytest-master/7_bonus_data_structures/4_dict.py
new file mode 100644
--- /dev/null	(date 1722185149286)
+++ b/конспекты/python_qa_pytest-master/7_bonus_data_structures/4_dict.py	(date 1722185149286)
@@ -0,0 +1,39 @@
+# CRUD (create, remove, update, delete)
+
+d = {}
+d['key'] = 'value'
+d['key'] = 'new_value'
+del d['key']
+del d
+
+# Iterate
+d = {'1': 'one', '2': 'two', '3': 'three', '4': 'four', '0': 'zero'}
+
+for i in d:
+    print(i)
+
+print("-----------------")
+
+for k in d.keys():
+    print(k)
+
+print("-----------------")
+
+for v in d.values():
+    print(v)
+
+print("-----------------")
+
+for i in d.items():
+    print(i)
+
+print("-----------------")
+
+for k,v in d.items():
+    print(k, v)
+
+print("-----------------")
+
+# Unordered
+# Справедливо для работы с большими словарями
+# https://www.quora.com/Are-Python-dictionaries-unordered
Index: конспекты/python_qa_pytest-master/7_bonus_data_structures/5_container.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/7_bonus_data_structures/5_container.py b/конспекты/python_qa_pytest-master/7_bonus_data_structures/5_container.py
new file mode 100644
--- /dev/null	(date 1722185149289)
+++ b/конспекты/python_qa_pytest-master/7_bonus_data_structures/5_container.py	(date 1722185149289)
@@ -0,0 +1,2 @@
+# Additional DS
+# https://docs.python.org/3.6/library/collections.html
Index: конспекты/python_qa_pytest-master/0_pytest_intro/test_pytest_intro.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/0_pytest_intro/test_pytest_intro.py b/конспекты/python_qa_pytest-master/0_pytest_intro/test_pytest_intro.py
new file mode 100644
--- /dev/null	(date 1722185149278)
+++ b/конспекты/python_qa_pytest-master/0_pytest_intro/test_pytest_intro.py	(date 1722185149278)
@@ -0,0 +1,30 @@
+# Создание тестовых файлов
+l=[]
+
+l.append(1)
+l.append('1 ')
+l.extend([2,3,4])
+
+def test_one():
+    print(" >>> I'm test one!")
+
+
+# Так тоже можно, но не нужно и с модулем не заработает
+def testwo():
+    pass
+
+
+# Создание тестовых классов
+class TestClass:
+
+    def test_one(self):
+        pass
+
+    def testtwo(self):
+        pass
+
+# Запуск отдельных файлов, функций, классов
+# pytest 0_pytest_intro/
+# pytest 0_pytest_intro/test_pytest_intro_1.py
+# pytest 0_pytest_intro/test_pytest_intro_1.py::TestClass
+# pytest 0_pytest_intro/test_pytest_intro_1.py::test_one
Index: конспекты/python_qa_pytest-master/1_fixtures_start/test_fixtures_example_start.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/1_fixtures_start/test_fixtures_example_start.py b/конспекты/python_qa_pytest-master/1_fixtures_start/test_fixtures_example_start.py
new file mode 100644
--- /dev/null	(date 1722185149278)
+++ b/конспекты/python_qa_pytest-master/1_fixtures_start/test_fixtures_example_start.py	(date 1722185149278)
@@ -0,0 +1,23 @@
+import pytest
+
+
+@pytest.fixture
+def first_fixture():
+    print("\nPrint from 'first_fixture'")
+
+
+def test_one(first_fixture):
+    pass
+
+
+def test_two(first_fixture):
+    pass
+
+
+class TestFunction:
+
+    def test_from_test_class_one(self, first_fixture):
+        pass
+
+    def test_from_test_class_two(self, first_fixture):
+        pass
Index: конспекты/python_qa_pytest-master/2_fixtures_conftest/test_fixtures_example.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/2_fixtures_conftest/test_fixtures_example.py b/конспекты/python_qa_pytest-master/2_fixtures_conftest/test_fixtures_example.py
new file mode 100644
--- /dev/null	(date 1722185149279)
+++ b/конспекты/python_qa_pytest-master/2_fixtures_conftest/test_fixtures_example.py	(date 1722185149279)
@@ -0,0 +1,22 @@
+import pytest
+
+
+# Уровень поиска фикстур в файлах conftest
+# В файле теста > в ближайшем conftest
+
+@pytest.fixture
+def first_fixture():
+    print("\nPrint from 'first_fixture'")
+
+
+def test_one(first_fixture):
+    pass
+
+
+class TestFunction:
+
+    def test_from_test_class_one(self, first_fixture):
+        pass
+
+    def test_from_test_class_two(self, first_fixture):
+        pass
Index: конспекты/python_qa_pytest-master/2_fixtures_conftest/conftest.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/2_fixtures_conftest/conftest.py b/конспекты/python_qa_pytest-master/2_fixtures_conftest/conftest.py
new file mode 100644
--- /dev/null	(date 1722185149279)
+++ b/конспекты/python_qa_pytest-master/2_fixtures_conftest/conftest.py	(date 1722185149279)
@@ -0,0 +1,5 @@
+import pytest
+
+@pytest.fixture
+def first_fixture():
+    print("\nPrint from 'first_fixture' in conftest.py")
Index: конспекты/python_qa_pytest-master/5_fixtures_return_values/test_fixtures_return_values.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/5_fixtures_return_values/test_fixtures_return_values.py b/конспекты/python_qa_pytest-master/5_fixtures_return_values/test_fixtures_return_values.py
new file mode 100644
--- /dev/null	(date 1722185149283)
+++ b/конспекты/python_qa_pytest-master/5_fixtures_return_values/test_fixtures_return_values.py	(date 1722185149283)
@@ -0,0 +1,11 @@
+def test_the_number(fixture_return_rnd_number):
+    assert fixture_return_rnd_number == 20
+
+
+def test_the_class(fixture_return_class):
+    assert fixture_return_class.mod2.pow(2, 3) == 8
+    assert fixture_return_class.mod1.choice(['a', 'b', 'c']) == 'a'
+
+
+def test_the_class2(fixture_return_class):
+    assert fixture_return_class.hello('Vasya') == 'Hello, Vasya'
Index: конспекты/python_qa_pytest-master/5_fixtures_return_values/conftest.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/5_fixtures_return_values/conftest.py b/конспекты/python_qa_pytest-master/5_fixtures_return_values/conftest.py
new file mode 100644
--- /dev/null	(date 1722185149283)
+++ b/конспекты/python_qa_pytest-master/5_fixtures_return_values/conftest.py	(date 1722185149283)
@@ -0,0 +1,23 @@
+import pytest
+import random
+import math
+
+
+@pytest.fixture
+def fixture_return_rnd_number():
+    return random.randint(1, 100)
+
+
+class TestClass:
+
+    def __init__(self, mod1, mod2):
+        self.mod1 = mod1
+        self.mod2 = mod2
+
+    def hello(self, name):
+        return f"Hello, {name}"
+
+
+@pytest.fixture
+def fixture_return_class():
+    return TestClass(mod1=random, mod2=math)
Index: конспекты/python_qa_pytest-master/6_fixtures_parametrization/test_fixtures_parametrization.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/6_fixtures_parametrization/test_fixtures_parametrization.py b/конспекты/python_qa_pytest-master/6_fixtures_parametrization/test_fixtures_parametrization.py
new file mode 100644
--- /dev/null	(date 1722185149284)
+++ b/конспекты/python_qa_pytest-master/6_fixtures_parametrization/test_fixtures_parametrization.py	(date 1722185149284)
@@ -0,0 +1,29 @@
+import pytest
+
+
+@pytest.mark.parametrize("test_input", [1, 2, 3])
+def test_one_2(test_input):
+    print(test_input)
+
+
+@pytest.mark.parametrize("test_input", [1, 2, 3, 4])
+class TestClassParametrized:
+
+    # Все функци должны использовать аргумент
+    def test_one(self, test_input):
+        pass
+
+    def test_two(self, test_input):
+        pass
+
+
+# Parametrize with fixture
+
+def test_one_1(fixture_with_params):
+    print(fixture_with_params)
+
+# Combine parametrization
+
+# @pytest.mark.parametrize("test_input", ['one', 'two', 'three'])
+# def test_one_2(test_input, fixture_with_params):
+#     print(test_input, fixture_with_params)
Index: конспекты/python_qa_pytest-master/6_fixtures_parametrization/conftest.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/6_fixtures_parametrization/conftest.py b/конспекты/python_qa_pytest-master/6_fixtures_parametrization/conftest.py
new file mode 100644
--- /dev/null	(date 1722185149284)
+++ b/конспекты/python_qa_pytest-master/6_fixtures_parametrization/conftest.py	(date 1722185149284)
@@ -0,0 +1,6 @@
+import pytest
+
+
+@pytest.fixture(params=[11, 12, 13])
+def fixture_with_params(request):
+    return request.param
Index: конспекты/python_qa_pytest-master/3_fixtures_scope_and_autouse/test_2_fixtures_autouse.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/3_fixtures_scope_and_autouse/test_2_fixtures_autouse.py b/конспекты/python_qa_pytest-master/3_fixtures_scope_and_autouse/test_2_fixtures_autouse.py
new file mode 100644
--- /dev/null	(date 1722185149281)
+++ b/конспекты/python_qa_pytest-master/3_fixtures_scope_and_autouse/test_2_fixtures_autouse.py	(date 1722185149281)
@@ -0,0 +1,53 @@
+import pytest
+
+
+# СНАЧАЛА ПРО SCOPE!
+
+@pytest.fixture(autouse=True)
+def function_fixture(request):
+    print(f"\n Hello from {request.scope} fixture!")
+    def fin():
+        print(f"\n Finalize from {request.scope} fixture!")
+    request.addfinalizer(fin)
+
+@pytest.fixture(scope="class", autouse=True)
+def class_fixture(request):
+    print(f"\n Hello from {request.scope} fixture!")
+    def fin():
+        print(f"\n Finalize from {request.scope} fixture!")
+    request.addfinalizer(fin)
+
+@pytest.fixture(scope="module", autouse=True)
+def module_fixture(request):
+    print(f"\n Hello from {request.scope} fixture!")
+    def fin():
+        print(f"\n Finalize from {request.scope} fixture!")
+    request.addfinalizer(fin)
+
+@pytest.fixture(scope="session", autouse=True)
+def session_fixture(request):
+    print(f"\n Hello from {request.scope.upper()} fixture!")
+    def fin():
+        print(f"\n Finalize from {request.scope.upper()} fixture!")
+    request.addfinalizer(fin)
+
+
+def test_one():
+    print('abc')
+    pass
+
+
+def test_two():
+    print('dfg')
+    pass
+
+
+class TestClass:
+
+    def test_one(self):
+        print(' first class autouse')
+        pass
+
+    def test_two(self):
+        print(' second class autouse')
+        pass
Index: конспекты/python_qa_pytest-master/3_fixtures_scope_and_autouse/test_1_fixtures_scope.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/3_fixtures_scope_and_autouse/test_1_fixtures_scope.py b/конспекты/python_qa_pytest-master/3_fixtures_scope_and_autouse/test_1_fixtures_scope.py
new file mode 100644
--- /dev/null	(date 1722185149280)
+++ b/конспекты/python_qa_pytest-master/3_fixtures_scope_and_autouse/test_1_fixtures_scope.py	(date 1722185149280)
@@ -0,0 +1,26 @@
+def test_one(function_fixture, class_fixture, module_fixture, session_fixture):
+    print("I test_one NOT in test class 1!")
+
+
+def test_two(function_fixture, class_fixture, module_fixture, session_fixture):
+    print("I test_two NOT in test class 2!")
+
+
+class TestClass:
+    def __init__(self, function_fixture, class_fixture, module_fixture, session_fixture):
+        self.function_fixture = function_fixture
+        self.class_fixture = class_fixture
+        self.module_fixture = module_fixture
+        self.session_fixture = session_fixture
+    def test_one(self):
+        print("Im test_one in TestClass test class!")
+
+    def test_two(self):
+        print("Im test_two in TestClass test class!")
+
+    def test_three(self):
+        print("Im test_three in TestClass test class!")
+
+class TestClass2(TestClass):
+    def test_four(self):
+        print("Im test_four in TestClass test class!")
\ No newline at end of file
Index: конспекты/python_qa_pytest-master/3_fixtures_scope_and_autouse/conftest.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/3_fixtures_scope_and_autouse/conftest.py b/конспекты/python_qa_pytest-master/3_fixtures_scope_and_autouse/conftest.py
new file mode 100644
--- /dev/null	(date 1722185149280)
+++ b/конспекты/python_qa_pytest-master/3_fixtures_scope_and_autouse/conftest.py	(date 1722185149280)
@@ -0,0 +1,46 @@
+import pytest
+
+
+@pytest.fixture()
+def function_fixture(request):
+    print(f"\n Hello from {request.scope} fixture!")
+
+    def fin():
+        print(f"\n Finalize from {request.scope} fixture!")
+
+    request.addfinalizer(fin)
+
+
+@pytest.fixture(scope="class")
+def class_fixture(request):
+    print(f"\n Hello from {request.scope} fixture!")
+
+    def fin():
+        print(f"\n Finalize from {request.scope} fixture!")
+
+    request.addfinalizer(fin)
+
+
+@pytest.fixture(scope="module")
+def module_fixture(request):
+    print(f"\n Hello from {request.scope} fixture!")
+
+    def fin():
+        print(f"\n Finalize from {request.scope} fixture!")
+
+    request.addfinalizer(fin)
+
+
+@pytest.fixture(scope="session")
+def session_fixture(request):
+    print(f"\n Hello from {request.scope} fixture!")
+
+    def fin():
+        print(f"\n Finalize from {request.scope} fixture!")
+
+    request.addfinalizer(fin)
+
+
+# @pytest.fixture(autouse=True)
+# def always_used_fixture():
+#     print(f"\n Hello, I'm fixture with autouse and funcction scope used always!")
Index: конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/test_2_fixtures_request_finalizer.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/test_2_fixtures_request_finalizer.py b/конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/test_2_fixtures_request_finalizer.py
new file mode 100644
--- /dev/null	(date 1722185149282)
+++ b/конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/test_2_fixtures_request_finalizer.py	(date 1722185149282)
@@ -0,0 +1,22 @@
+import pytest
+
+
+@pytest.fixture()
+def first_fixture_for_request(request):
+    def fin():
+        print("\nThis is finalizer from first_fixture_for_request ")
+
+    request.addfinalizer(fin)
+
+
+def test_one(first_fixture_for_request):
+    print("\nPrint from 'test_one'")
+
+
+class TestClass:
+
+    def test_two(self, first_fixture_for_request):
+        print("\nPrint from 'test_two'")
+
+    def test_three(self, first_fixture_for_request):
+        print("\nPrint from 'test_three'")
Index: конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/test_3_fixtures_finalizer_with_yield.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/test_3_fixtures_finalizer_with_yield.py b/конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/test_3_fixtures_finalizer_with_yield.py
new file mode 100644
--- /dev/null	(date 1722185149282)
+++ b/конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/test_3_fixtures_finalizer_with_yield.py	(date 1722185149282)
@@ -0,0 +1,23 @@
+import pytest
+
+
+@pytest.fixture(scope="function")
+def setup_function_fixture():
+    print("\nHello from setup function fixture!\n")
+    yield
+    print("\nBye bye from setup function fixture!\n")
+
+
+@pytest.fixture(scope="module")
+def setup_module_fixture():
+    print("\nHello from setup module fixture!\n")
+    yield
+    print("\nBye bye from setup module fixture!\n")
+
+
+def test_one(setup_function_fixture):
+    pass
+
+
+def test_two(setup_module_fixture):
+    pass
Index: конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/test_1_fixtures_request.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/test_1_fixtures_request.py b/конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/test_1_fixtures_request.py
new file mode 100644
--- /dev/null	(date 1722185149281)
+++ b/конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/test_1_fixtures_request.py	(date 1722185149281)
@@ -0,0 +1,27 @@
+import pytest
+
+
+@pytest.fixture()
+def first_fixture_for_request(request):
+    print("___________________________")
+    print(f"{request.node}")
+    print(f"{request.scope}")
+    print(f"{request.cls}")
+    print(f"{request.module}")
+    print("___________________________")
+    # print("\nRequset object data: ")
+    # for el in list(dir(request)):
+    #     print(el)
+
+
+def test_one(first_fixture_for_request, function_fixture, class_fixture, module_fixture, session_fixture):
+    print("\nPrint from 'test_one'")
+
+
+class TestClass:
+
+    def test_two(self, first_fixture_for_request):
+        print("\nPrint from 'test_two'")
+
+    def test_three(self, first_fixture_for_request):
+        print("\nPrint from 'test_three'")
Index: конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/test_4_pass_fixture_to_fixture.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/test_4_pass_fixture_to_fixture.py b/конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/test_4_pass_fixture_to_fixture.py
new file mode 100644
--- /dev/null	(date 1722185149283)
+++ b/конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/test_4_pass_fixture_to_fixture.py	(date 1722185149283)
@@ -0,0 +1,21 @@
+import pytest
+
+
+@pytest.fixture
+def fixture_one():
+    print("\nHey, this is fixture one!")
+    yield
+    print("\nBye from fixture one!")
+
+
+@pytest.fixture
+def fixture_two(fixture_one):
+    print("\nHey, this is fixture two!")
+    yield
+    print("\nBye from fixture two!")
+
+
+def test_function(fixture_two):
+    print("\nHey, I'm test function!")
+def test_function2():
+    print("\nHey, I'm test function 2!")
\ No newline at end of file
Index: конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/conftest.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/conftest.py b/конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/conftest.py
new file mode 100644
--- /dev/null	(date 1722185149281)
+++ b/конспекты/python_qa_pytest-master/4_fixtures_request_object_finalizer/conftest.py	(date 1722185149281)
@@ -0,0 +1,47 @@
+import pytest
+
+
+
+@pytest.fixture(scope="function")
+def function_fixture(request):
+    print(f"\n Hello from {request.scope} fixture!")
+
+    def fin():
+        print(f"\n Finalize from {request.scope} fixture!")
+
+    request.addfinalizer(fin)
+
+
+@pytest.fixture(scope="class")
+def class_fixture(request):
+    print(f"\n Hello from {request.scope} fixture!")
+
+    def fin():
+        print(f"\n Finalize from {request.scope} fixture!")
+
+    request.addfinalizer(fin)
+
+
+@pytest.fixture(scope="module")
+def module_fixture(request):
+    print(f"\n Hello from {request.scope} fixture!")
+
+    def fin():
+        print(f"\n Finalize from {request.scope} fixture!")
+
+    request.addfinalizer(fin)
+
+
+@pytest.fixture(scope="session")
+def session_fixture(request):
+    print(f"\n Hello from {request.scope} fixture!")
+
+    def fin():
+        print(f"\n Finalize from {request.scope} fixture!")
+
+    request.addfinalizer(fin)
+
+
+# @pytest.fixture(autouse=True)
+# def always_used_fixture():
+#     print(f"\n Hello, I'm fixture with autouse and funcction scope used always!")
Index: конспекты/opencart_source.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/opencart_source.txt b/конспекты/opencart_source.txt
new file mode 100644
--- /dev/null	(date 1722185480947)
+++ b/конспекты/opencart_source.txt	(date 1722185480947)
@@ -0,0 +1,365 @@
+
+<!DOCTYPE html>
+<!--[if IE]><![endif]-->
+<!--[if IE 8 ]><html dir="ltr" lang="en" class="ie8"><![endif]-->
+<!--[if IE 9 ]><html dir="ltr" lang="en" class="ie9"><![endif]-->
+<!--[if (gt IE 9)|!(IE)]><!-->
+<html dir="ltr" lang="en">
+<!--<![endif]-->
+<head>
+<meta charset="UTF-8" />
+<meta name="viewport" content="width=device-width, initial-scale=1">
+<meta http-equiv="X-UA-Compatible" content="IE=edge">
+<title>Your Store</title>
+<base href="http://localhost:8080/" />
+<meta name="description" content="My Store" />
+<script src="catalog/view/javascript/jquery/jquery-2.1.1.min.js" type="text/javascript"></script>
+<link href="catalog/view/javascript/bootstrap/css/bootstrap.min.css" rel="stylesheet" media="screen" />
+<script src="catalog/view/javascript/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
+<link href="catalog/view/javascript/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css" />
+<link href="//fonts.googleapis.com/css?family=Open+Sans:400,400i,300,700" rel="stylesheet" type="text/css" />
+<link href="catalog/view/theme/default/stylesheet/stylesheet.css" rel="stylesheet">
+<link href="catalog/view/javascript/jquery/swiper/css/swiper.min.css" type="text/css" rel="stylesheet" media="screen" />
+<link href="catalog/view/javascript/jquery/swiper/css/opencart.css" type="text/css" rel="stylesheet" media="screen" />
+<script src="catalog/view/javascript/jquery/swiper/js/swiper.jquery.js" type="text/javascript"></script>
+<script src="catalog/view/javascript/common.js" type="text/javascript"></script>
+<link href="http://localhost:8080/image/catalog/cart.png" rel="icon" />
+</head>
+<body>
+<nav id="top">
+  <div class="container"><div class="pull-left">
+  <form action="http://localhost:8080/index.php?route=common/currency/currency" method="post" enctype="multipart/form-data" id="form-currency">
+    <div class="btn-group">
+      <button class="btn btn-link dropdown-toggle" data-toggle="dropdown">                               <strong>$</strong>        <span class="hidden-xs hidden-sm hidden-md">Currency</span>&nbsp;<i class="fa fa-caret-down"></i></button>
+      <ul class="dropdown-menu">
+                        <li>
+          <button class="currency-select btn btn-link btn-block" type="button" name="EUR">€ Euro</button>
+        </li>
+                                <li>
+          <button class="currency-select btn btn-link btn-block" type="button" name="GBP">£ Pound Sterling</button>
+        </li>
+                                <li>
+          <button class="currency-select btn btn-link btn-block" type="button" name="USD">$ US Dollar</button>
+        </li>
+                      </ul>
+    </div>
+    <input type="hidden" name="code" value="" />
+    <input type="hidden" name="redirect" value="http://localhost:8080/index.php?route=common/home" />
+  </form>
+</div>
+ 
+    
+    <div id="top-links" class="nav pull-right">
+      <ul class="list-inline">
+        <li><a href="http://localhost:8080/index.php?route=information/contact"><i class="fa fa-phone"></i></a> <span class="hidden-xs hidden-sm hidden-md">123456789</span></li>
+        <li class="dropdown"><a href="http://localhost:8080/index.php?route=account/account" title="My Account" class="dropdown-toggle" data-toggle="dropdown"><i class="fa fa-user"></i> <span class="hidden-xs hidden-sm hidden-md">My Account</span> <span class="caret"></span></a>
+          <ul class="dropdown-menu dropdown-menu-right">
+                        <li><a href="http://localhost:8080/index.php?route=account/register">Register</a></li>
+            <li><a href="http://localhost:8080/index.php?route=account/login">Login</a></li>
+                      </ul>
+        </li>
+        <li><a href="http://localhost:8080/index.php?route=account/wishlist" id="wishlist-total" title="Wish List (0)"><i class="fa fa-heart"></i> <span class="hidden-xs hidden-sm hidden-md">Wish List (0)</span></a></li>
+        <li><a href="http://localhost:8080/index.php?route=checkout/cart" title="Shopping Cart"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">Shopping Cart</span></a></li>
+        <li><a href="http://localhost:8080/index.php?route=checkout/checkout" title="Checkout"><i class="fa fa-share"></i> <span class="hidden-xs hidden-sm hidden-md">Checkout</span></a></li>
+      </ul>
+    </div>
+  </div>
+</nav>
+<header>
+  <div class="container">
+    <div class="row">
+      <div class="col-sm-4">
+        <div id="logo">          <h1><a href="http://localhost:8080/index.php?route=common/home">Your Store</a></h1>
+          </div>
+      </div>
+      <div class="col-sm-5"><div id="search" class="input-group">
+  <input type="text" name="search" value="" placeholder="Search" class="form-control input-lg" />
+  <span class="input-group-btn">
+    <button type="button" class="btn btn-default btn-lg"><i class="fa fa-search"></i></button>
+  </span>
+</div></div>
+      <div class="col-sm-3"><div id="cart" class="btn-group btn-block">
+  <button type="button" data-toggle="dropdown" data-loading-text="Loading..." class="btn btn-inverse btn-block btn-lg dropdown-toggle"><i class="fa fa-shopping-cart"></i> <span id="cart-total">0 item(s) - $0.00</span></button>
+  <ul class="dropdown-menu pull-right">
+        <li>
+      <p class="text-center">Your shopping cart is empty!</p>
+    </li>
+      </ul>
+</div>
+</div>
+    </div>
+  </div>
+</header>
+<div class="container">
+  <nav id="menu" class="navbar">
+    <div class="navbar-header"><span id="category" class="visible-xs">Categories</span>
+      <button type="button" class="btn btn-navbar navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse"><i class="fa fa-bars"></i></button>
+    </div>
+    <div class="collapse navbar-collapse navbar-ex1-collapse">
+      <ul class="nav navbar-nav">
+                        <li class="dropdown"><a href="http://localhost:8080/index.php?route=product/category&amp;path=20" class="dropdown-toggle" data-toggle="dropdown">Desktops</a>
+          <div class="dropdown-menu">
+            <div class="dropdown-inner">               <ul class="list-unstyled">
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=20_26">PC (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=20_27">Mac (1)</a></li>
+                              </ul>
+              </div>
+            <a href="http://localhost:8080/index.php?route=product/category&amp;path=20" class="see-all">Show All Desktops</a> </div>
+        </li>
+                                <li class="dropdown"><a href="http://localhost:8080/index.php?route=product/category&amp;path=18" class="dropdown-toggle" data-toggle="dropdown">Laptops &amp; Notebooks</a>
+          <div class="dropdown-menu">
+            <div class="dropdown-inner">               <ul class="list-unstyled">
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=18_46">Macs (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=18_45">Windows (0)</a></li>
+                              </ul>
+              </div>
+            <a href="http://localhost:8080/index.php?route=product/category&amp;path=18" class="see-all">Show All Laptops &amp; Notebooks</a> </div>
+        </li>
+                                <li class="dropdown"><a href="http://localhost:8080/index.php?route=product/category&amp;path=25" class="dropdown-toggle" data-toggle="dropdown">Components</a>
+          <div class="dropdown-menu">
+            <div class="dropdown-inner">               <ul class="list-unstyled">
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=25_29">Mice and Trackballs (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=25_28">Monitors (2)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=25_30">Printers (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=25_31">Scanners (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=25_32">Web Cameras (0)</a></li>
+                              </ul>
+              </div>
+            <a href="http://localhost:8080/index.php?route=product/category&amp;path=25" class="see-all">Show All Components</a> </div>
+        </li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=57">Tablets</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=17">Software</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=24">Phones &amp; PDAs</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=33">Cameras</a></li>
+                                <li class="dropdown"><a href="http://localhost:8080/index.php?route=product/category&amp;path=34" class="dropdown-toggle" data-toggle="dropdown">MP3 Players</a>
+          <div class="dropdown-menu">
+            <div class="dropdown-inner">               <ul class="list-unstyled">
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_43">test 11 (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_44">test 12 (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_47">test 15 (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_48">test 16 (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_49">test 17 (0)</a></li>
+                              </ul>
+                            <ul class="list-unstyled">
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_50">test 18 (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_51">test 19 (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_52">test 20 (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_53">test 21 (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_54">test 22 (0)</a></li>
+                              </ul>
+                            <ul class="list-unstyled">
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_55">test 23 (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_56">test 24 (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_38">test 4 (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_37">test 5 (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_39">test 6 (0)</a></li>
+                              </ul>
+                            <ul class="list-unstyled">
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_40">test 7 (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_41">test 8 (0)</a></li>
+                                <li><a href="http://localhost:8080/index.php?route=product/category&amp;path=34_42">test 9 (0)</a></li>
+                              </ul>
+              </div>
+            <a href="http://localhost:8080/index.php?route=product/category&amp;path=34" class="see-all">Show All MP3 Players</a> </div>
+        </li>
+                      </ul>
+    </div>
+  </nav>
+</div>
+ 
+
+<div id="common-home" class="container">
+  <div class="row">
+                <div id="content" class="col-sm-12"><div class="swiper-viewport">
+  <div id="slideshow0" class="swiper-container">
+    <div class="swiper-wrapper">       <div class="swiper-slide text-center"><a href="index.php?route=product/product&amp;path=57&amp;product_id=49"><img src="http://localhost:8080/image/cache/catalog/demo/banners/iPhone6-1140x380.jpg" alt="iPhone 6" class="img-responsive" /></a></div>
+            <div class="swiper-slide text-center"><img src="http://localhost:8080/image/cache/catalog/demo/banners/MacBookAir-1140x380.jpg" alt="MacBookAir" class="img-responsive" /></div>
+       </div>
+  </div>
+  <div class="swiper-pagination slideshow0"></div>
+  <div class="swiper-pager">
+    <div class="swiper-button-next"></div>
+    <div class="swiper-button-prev"></div>
+  </div>
+</div>
+<script type="text/javascript"><!--
+$('#slideshow0').swiper({
+	mode: 'horizontal',
+	slidesPerView: 1,
+	pagination: '.slideshow0',
+	paginationClickable: true,
+	nextButton: '.swiper-button-next',
+    prevButton: '.swiper-button-prev',
+    spaceBetween: 30,
+	autoplay: 2500,
+    autoplayDisableOnInteraction: true,
+	loop: true
+});
+--></script>
+<h3>Featured</h3>
+<div class="row">
+   <div class="product-layout col-lg-3 col-md-3 col-sm-6 col-xs-12">
+    <div class="product-thumb transition">
+      <div class="image"><a href="http://localhost:8080/index.php?route=product/product&amp;product_id=43"><img src="http://localhost:8080/image/cache/catalog/demo/macbook_1-200x200.jpg" alt="MacBook" title="MacBook" class="img-responsive" /></a></div>
+      <div class="caption">
+        <h4><a href="http://localhost:8080/index.php?route=product/product&amp;product_id=43">MacBook</a></h4>
+        <p>
+	
+		Intel Core 2 Duo processor
+	
+		Powered by an Intel Core 2 Duo processor at speeds up to 2.1..</p>
+                        <p class="price">
+                    $602.00
+                              <span class="price-tax">Ex Tax: $500.00</span>
+                  </p>
+              </div>
+      <div class="button-group">
+        <button type="button" onclick="cart.add('43');"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">Add to Cart</span></button>
+        <button type="button" data-toggle="tooltip" title="Add to Wish List" onclick="wishlist.add('43');"><i class="fa fa-heart"></i></button>
+        <button type="button" data-toggle="tooltip" title="Compare this Product" onclick="compare.add('43');"><i class="fa fa-exchange"></i></button>
+      </div>
+    </div>
+  </div>
+    <div class="product-layout col-lg-3 col-md-3 col-sm-6 col-xs-12">
+    <div class="product-thumb transition">
+      <div class="image"><a href="http://localhost:8080/index.php?route=product/product&amp;product_id=40"><img src="http://localhost:8080/image/cache/catalog/demo/iphone_1-200x200.jpg" alt="iPhone" title="iPhone" class="img-responsive" /></a></div>
+      <div class="caption">
+        <h4><a href="http://localhost:8080/index.php?route=product/product&amp;product_id=40">iPhone</a></h4>
+        <p>
+	iPhone is a revolutionary new mobile phone that allows you to make a call by simply tapping a nam..</p>
+                        <p class="price">
+                    $123.20
+                              <span class="price-tax">Ex Tax: $101.00</span>
+                  </p>
+              </div>
+      <div class="button-group">
+        <button type="button" onclick="cart.add('40');"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">Add to Cart</span></button>
+        <button type="button" data-toggle="tooltip" title="Add to Wish List" onclick="wishlist.add('40');"><i class="fa fa-heart"></i></button>
+        <button type="button" data-toggle="tooltip" title="Compare this Product" onclick="compare.add('40');"><i class="fa fa-exchange"></i></button>
+      </div>
+    </div>
+  </div>
+    <div class="product-layout col-lg-3 col-md-3 col-sm-6 col-xs-12">
+    <div class="product-thumb transition">
+      <div class="image"><a href="http://localhost:8080/index.php?route=product/product&amp;product_id=42"><img src="http://localhost:8080/image/cache/catalog/demo/apple_cinema_30-200x200.jpg" alt="Apple Cinema 30&quot;" title="Apple Cinema 30&quot;" class="img-responsive" /></a></div>
+      <div class="caption">
+        <h4><a href="http://localhost:8080/index.php?route=product/product&amp;product_id=42">Apple Cinema 30&quot;</a></h4>
+        <p>
+	The 30-inch Apple Cinema HD Display delivers an amazing 2560 x 1600 pixel resolution. Designed sp..</p>
+                        <p class="price">
+                    <span class="price-new">$110.00</span> <span class="price-old">$122.00</span>
+                              <span class="price-tax">Ex Tax: $90.00</span>
+                  </p>
+              </div>
+      <div class="button-group">
+        <button type="button" onclick="cart.add('42');"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">Add to Cart</span></button>
+        <button type="button" data-toggle="tooltip" title="Add to Wish List" onclick="wishlist.add('42');"><i class="fa fa-heart"></i></button>
+        <button type="button" data-toggle="tooltip" title="Compare this Product" onclick="compare.add('42');"><i class="fa fa-exchange"></i></button>
+      </div>
+    </div>
+  </div>
+    <div class="product-layout col-lg-3 col-md-3 col-sm-6 col-xs-12">
+    <div class="product-thumb transition">
+      <div class="image"><a href="http://localhost:8080/index.php?route=product/product&amp;product_id=30"><img src="http://localhost:8080/image/cache/catalog/demo/canon_eos_5d_1-200x200.jpg" alt="Canon EOS 5D" title="Canon EOS 5D" class="img-responsive" /></a></div>
+      <div class="caption">
+        <h4><a href="http://localhost:8080/index.php?route=product/product&amp;product_id=30">Canon EOS 5D</a></h4>
+        <p>
+	Canon's press material for the EOS 5D states that it 'defines (a) new D-SLR category', while we'r..</p>
+                        <p class="price">
+                    <span class="price-new">$98.00</span> <span class="price-old">$122.00</span>
+                              <span class="price-tax">Ex Tax: $80.00</span>
+                  </p>
+              </div>
+      <div class="button-group">
+        <button type="button" onclick="cart.add('30');"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">Add to Cart</span></button>
+        <button type="button" data-toggle="tooltip" title="Add to Wish List" onclick="wishlist.add('30');"><i class="fa fa-heart"></i></button>
+        <button type="button" data-toggle="tooltip" title="Compare this Product" onclick="compare.add('30');"><i class="fa fa-exchange"></i></button>
+      </div>
+    </div>
+  </div>
+  </div>
+
+<div class="swiper-viewport">
+  <div id="carousel0" class="swiper-container">
+    <div class="swiper-wrapper">      <div class="swiper-slide text-center"><img src="http://localhost:8080/image/cache/catalog/demo/manufacturer/nfl-130x100.png" alt="NFL" class="img-responsive" /></div>
+            <div class="swiper-slide text-center"><img src="http://localhost:8080/image/cache/catalog/demo/manufacturer/redbull-130x100.png" alt="RedBull" class="img-responsive" /></div>
+            <div class="swiper-slide text-center"><img src="http://localhost:8080/image/cache/catalog/demo/manufacturer/sony-130x100.png" alt="Sony" class="img-responsive" /></div>
+            <div class="swiper-slide text-center"><img src="http://localhost:8080/image/cache/catalog/demo/manufacturer/cocacola-130x100.png" alt="Coca Cola" class="img-responsive" /></div>
+            <div class="swiper-slide text-center"><img src="http://localhost:8080/image/cache/catalog/demo/manufacturer/burgerking-130x100.png" alt="Burger King" class="img-responsive" /></div>
+            <div class="swiper-slide text-center"><img src="http://localhost:8080/image/cache/catalog/demo/manufacturer/canon-130x100.png" alt="Canon" class="img-responsive" /></div>
+            <div class="swiper-slide text-center"><img src="http://localhost:8080/image/cache/catalog/demo/manufacturer/harley-130x100.png" alt="Harley Davidson" class="img-responsive" /></div>
+            <div class="swiper-slide text-center"><img src="http://localhost:8080/image/cache/catalog/demo/manufacturer/dell-130x100.png" alt="Dell" class="img-responsive" /></div>
+            <div class="swiper-slide text-center"><img src="http://localhost:8080/image/cache/catalog/demo/manufacturer/disney-130x100.png" alt="Disney" class="img-responsive" /></div>
+            <div class="swiper-slide text-center"><img src="http://localhost:8080/image/cache/catalog/demo/manufacturer/starbucks-130x100.png" alt="Starbucks" class="img-responsive" /></div>
+            <div class="swiper-slide text-center"><img src="http://localhost:8080/image/cache/catalog/demo/manufacturer/nintendo-130x100.png" alt="Nintendo" class="img-responsive" /></div>
+      </div>
+  </div>
+  <div class="swiper-pagination carousel0"></div>
+  <div class="swiper-pager">
+    <div class="swiper-button-next"></div>
+    <div class="swiper-button-prev"></div>
+  </div>
+</div>
+<script type="text/javascript"><!--
+$('#carousel0').swiper({
+	mode: 'horizontal',
+	slidesPerView: 5,
+	pagination: '.carousel0',
+	paginationClickable: true,
+	nextButton: '.swiper-button-next',
+    prevButton: '.swiper-button-prev',
+	autoplay: 2500,
+	loop: true
+});
+--></script>
+</div>
+    </div>
+</div>
+<footer>
+  <div class="container">
+    <div class="row">
+            <div class="col-sm-3">
+        <h5>Information</h5>
+        <ul class="list-unstyled">
+                   <li><a href="http://localhost:8080/index.php?route=information/information&amp;information_id=4">About Us</a></li>
+                    <li><a href="http://localhost:8080/index.php?route=information/information&amp;information_id=6">Delivery Information</a></li>
+                    <li><a href="http://localhost:8080/index.php?route=information/information&amp;information_id=3">Privacy Policy</a></li>
+                    <li><a href="http://localhost:8080/index.php?route=information/information&amp;information_id=5">Terms &amp; Conditions</a></li>
+                  </ul>
+      </div>
+            <div class="col-sm-3">
+        <h5>Customer Service</h5>
+        <ul class="list-unstyled">
+          <li><a href="http://localhost:8080/index.php?route=information/contact">Contact Us</a></li>
+          <li><a href="http://localhost:8080/index.php?route=account/return/add">Returns</a></li>
+          <li><a href="http://localhost:8080/index.php?route=information/sitemap">Site Map</a></li>
+        </ul>
+      </div>
+      <div class="col-sm-3">
+        <h5>Extras</h5>
+        <ul class="list-unstyled">
+          <li><a href="http://localhost:8080/index.php?route=product/manufacturer">Brands</a></li>
+          <li><a href="http://localhost:8080/index.php?route=account/voucher">Gift Certificates</a></li>
+          <li><a href="http://localhost:8080/index.php?route=affiliate/login">Affiliate</a></li>
+          <li><a href="http://localhost:8080/index.php?route=product/special">Specials</a></li>
+        </ul>
+      </div>
+      <div class="col-sm-3">
+        <h5>My Account</h5>
+        <ul class="list-unstyled">
+          <li><a href="http://localhost:8080/index.php?route=account/account">My Account</a></li>
+          <li><a href="http://localhost:8080/index.php?route=account/order">Order History</a></li>
+          <li><a href="http://localhost:8080/index.php?route=account/wishlist">Wish List</a></li>
+          <li><a href="http://localhost:8080/index.php?route=account/newsletter">Newsletter</a></li>
+        </ul>
+      </div>
+    </div>
+    <hr>
+    <p>Powered By <a href="http://www.opencart.com">OpenCart</a><br /> Your Store &copy; 2024</p>
+  </div>
+</footer>
+<!--
+OpenCart is open source software and you are free to remove the powered by OpenCart if you want, but its generally accepted practise to make a small donation.
+Please donate via PayPal to donate@opencart.com
+//-->
+</body></html>
\ No newline at end of file
Index: конспекты/o-master/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/.gitignore b/конспекты/o-master/.gitignore
new file mode 100644
--- /dev/null	(date 1722185149176)
+++ b/конспекты/o-master/.gitignore	(date 1722185149176)
@@ -0,0 +1,104 @@
+# Byte-compiled / optimized / DLL files
+__pycache__/
+*.py[cod]
+*$py.class
+
+# C extensions
+*.so
+
+# Distribution / packaging
+.Python
+build/
+develop-eggs/
+dist/
+downloads/
+eggs/
+.eggs/
+lib/
+lib64/
+parts/
+sdist/
+var/
+wheels/
+*.egg-info/
+.installed.cfg
+*.egg
+MANIFEST
+
+# PyInstaller
+#  Usually these files are written by a python script from a template
+#  before PyInstaller builds the exe, so as to inject date/other infos into it.
+*.manifest
+*.spec
+
+# Installer logs
+pip-log.txt
+pip-delete-this-directory.txt
+
+# Unit test / coverage reports
+htmlcov/
+.tox/
+.coverage
+.coverage.*
+.cache
+nosetests.xml
+coverage.xml
+*.cover
+.hypothesis/
+.pytest_cache/
+
+# Translations
+*.mo
+*.pot
+
+# Django stuff:
+*.log
+local_settings.py
+db.sqlite3
+
+# Flask stuff:
+instance/
+.webassets-cache
+
+# Scrapy stuff:
+.scrapy
+
+# Sphinx documentation
+docs/_build/
+
+# PyBuilder
+target/
+
+# Jupyter Notebook
+.ipynb_checkpoints
+
+# pyenv
+.python-version
+
+# celery beat schedule file
+celerybeat-schedule
+
+# SageMath parsed files
+*.sage.py
+
+# Environments
+.env
+.venv
+env/
+venv/
+ENV/
+env.bak/
+venv.bak/
+
+# Spyder project settings
+.spyderproject
+.spyproject
+
+# Rope project settings
+.ropeproject
+
+# mkdocs documentation
+/site
+
+# mypy
+.mypy_cache/
Index: конспекты/o-master/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/README.md b/конспекты/o-master/README.md
new file mode 100644
--- /dev/null	(date 1722185149263)
+++ b/конспекты/o-master/README.md	(date 1722185149263)
@@ -0,0 +1,2 @@
+# otus
+examples from lessons
Index: конспекты/o-master/PythonQA/Lesson5/conftest.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson5/conftest.py b/конспекты/o-master/PythonQA/Lesson5/conftest.py
new file mode 100644
--- /dev/null	(date 1722185149260)
+++ b/конспекты/o-master/PythonQA/Lesson5/conftest.py	(date 1722185149260)
@@ -0,0 +1,8 @@
+from parallelrun.application import Application
+import pytest
+from parallelrun.my_test import TestSuit
+
+
+@pytest.fixture(scope='session')
+def app(browser_name):
+    return Application(browser_name)
\ No newline at end of file
Index: конспекты/o-master/PythonQA/Lesson5/test_example_1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson5/test_example_1.py b/конспекты/o-master/PythonQA/Lesson5/test_example_1.py
new file mode 100644
--- /dev/null	(date 1722185149262)
+++ b/конспекты/o-master/PythonQA/Lesson5/test_example_1.py	(date 1722185149262)
@@ -0,0 +1,19 @@
+import pytest
+from selenium import webdriver
+from selenium.webdriver import ChromeOptions, FirefoxOptions
+
+@pytest.fixture
+def chrome_browser(request):
+    options = ChromeOptions()
+    options.add_argument("--start-fullscreen")
+    wd = webdriver.Chrome(chrome_options=options)
+    request.addfinalizer(wd.quit)
+    return wd
+
+
+def test_example(chrome_browser):
+    """
+    First test
+    """
+    chrome_browser.get("https://otus.ru/")
+    assert chrome_browser.find_element_by_class_name('header2-menu__phone').text == '+7 499 959-43-99'
Index: конспекты/o-master/PythonQA/Lesson5/test_example_2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson5/test_example_2.py b/конспекты/o-master/PythonQA/Lesson5/test_example_2.py
new file mode 100644
--- /dev/null	(date 1722185149262)
+++ b/конспекты/o-master/PythonQA/Lesson5/test_example_2.py	(date 1722185149262)
@@ -0,0 +1,28 @@
+import pytest
+from selenium import webdriver
+from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
+
+
+@pytest.fixture
+def chrome_browser(request):
+
+    desired_capabilities = {'browserName': 'htmlunit',
+                            'version': '2',
+                            'javascriptEnabled': True}
+    wd = webdriver.Chrome(desired_capabilities=desired_capabilities)
+
+    print(wd.capabilities)
+
+    request.addfinalizer(wd.quit)
+    return wd
+
+
+def test_example(chrome_browser):
+    """
+    Example with cookie and run with capabilities
+    """
+    chrome_browser.get("https://otus.ru/")
+    chrome_browser.add_cookie({'name': 'test', 'value': 'bar'})  # Добавить Cookie
+    chrome_browser.get_cookie('test')  # Считать информацию о cookie
+    chrome_browser.delete_cookie('test')  # Удалить Cookie
+    chrome_browser.delete_all_cookies()  # Удалить все cookies
Index: конспекты/o-master/PythonQA/Lesson5/test_example_3.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson5/test_example_3.py b/конспекты/o-master/PythonQA/Lesson5/test_example_3.py
new file mode 100644
--- /dev/null	(date 1722185149263)
+++ b/конспекты/o-master/PythonQA/Lesson5/test_example_3.py	(date 1722185149263)
@@ -0,0 +1,19 @@
+import pytest
+from selenium import webdriver
+
+
+@pytest.fixture
+def chrome_browser(request):
+    options = webdriver.ChromeOptions()
+    options.binary_location = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
+    options.add_argument("start-maximized")
+    wd = webdriver.Chrome(chrome_options=options)
+    request.addfinalizer(wd.quit)
+    return wd
+
+
+def test_example(chrome_browser):
+    """
+    Example with ChromeOptions
+    """
+    chrome_browser.get("https://otus.ru/")
\ No newline at end of file
Index: конспекты/o-master/PythonQA/Lesson11/alerts.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson11/alerts.py b/конспекты/o-master/PythonQA/Lesson11/alerts.py
new file mode 100644
--- /dev/null	(date 1722185149178)
+++ b/конспекты/o-master/PythonQA/Lesson11/alerts.py	(date 1722185149178)
@@ -0,0 +1,31 @@
+import pytest
+from selenium import webdriver
+
+
+@pytest.fixture
+def chrome_browser(request):
+    options = webdriver.ChromeOptions()
+    # options.binary_location = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
+    options.add_argument("start-maximized")
+    wd = webdriver.Chrome(chrome_options=options)
+    request.addfinalizer(wd.quit)
+    return wd
+
+
+def test_example(chrome_browser):
+    chrome_browser.get("https://otus.ru/")
+    chrome_browser.execute_script("alert( '123')")
+    alert = chrome_browser.switch_to_alert()
+    alert_text = alert.text
+    print(alert_text)
+    alert.accept()
+
+    chrome_browser.execute_script("prompt('write + if you see it')", "-")
+    prompt = chrome_browser.switch_to_alert()
+    prompt.send_keys('+')
+    prompt.accept()
+
+    chrome_browser.execute_script('confirm("Are You Ok?")')
+    confirm = chrome_browser.switch_to_alert()
+    print(confirm.get_text())
+    confirm.accept()
Index: конспекты/o-master/PythonQA/Lesson11/downloadfile.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson11/downloadfile.py b/конспекты/o-master/PythonQA/Lesson11/downloadfile.py
new file mode 100644
--- /dev/null	(date 1722185149178)
+++ b/конспекты/o-master/PythonQA/Lesson11/downloadfile.py	(date 1722185149178)
@@ -0,0 +1,21 @@
+import os
+import pytest
+from selenium import webdriver
+
+
+@pytest.fixture
+def chrome_browser(request):
+    options = webdriver.ChromeOptions()
+    # options.binary_location = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
+    options.add_argument("start-maximized")
+    wd = webdriver.Chrome(chrome_options=options, desired_capabilities={"unexpectedAlertBehaviour": "dismiss"})
+    request.addfinalizer(wd.quit)
+    return wd
+
+
+def test_download(chrome_browser):
+    chrome_browser.get('https://radikal.ru/')
+    dirname = os.path.dirname(__file__)
+    filename = os.path.join(dirname, '1.JPG')
+    input_manager = chrome_browser.find_element_by_css_selector('input.upload1')
+    input_manager.send_keys(filename)
Index: конспекты/o-master/PythonQA/Lesson11/frame.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson11/frame.py b/конспекты/o-master/PythonQA/Lesson11/frame.py
new file mode 100644
--- /dev/null	(date 1722185149178)
+++ b/конспекты/o-master/PythonQA/Lesson11/frame.py	(date 1722185149178)
@@ -0,0 +1,26 @@
+import pytest
+from selenium import webdriver
+from selenium.webdriver.common.action_chains import ActionChains
+
+
+@pytest.fixture
+def chrome_browser(request):
+    options = webdriver.ChromeOptions()
+    # options.binary_location = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
+    options.add_argument("start-maximized")
+    wd = webdriver.Chrome(chrome_options=options)
+    request.addfinalizer(wd.quit)
+    return wd
+
+
+def test_dnd(chrome_browser):
+    chrome_browser.get("http://jqueryui.com/draggable/#scroll")
+    # chrome_browser.find_element_by_link_text("/resources/demos/draggable/scroll.html")
+    chrome_browser.switch_to.frame(0)
+
+    source1 = chrome_browser.find_element_by_id('draggable')
+    source2 = chrome_browser.find_element_by_id('draggable2')
+    action = ActionChains(chrome_browser)
+
+    # move element by x,y coordinates on the screen
+    action.drag_and_drop(source1, source2).perform()
Index: конспекты/o-master/PythonQA/Lesson11/windows.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson11/windows.py b/конспекты/o-master/PythonQA/Lesson11/windows.py
new file mode 100644
--- /dev/null	(date 1722185149179)
+++ b/конспекты/o-master/PythonQA/Lesson11/windows.py	(date 1722185149179)
@@ -0,0 +1,43 @@
+import pytest
+from selenium import webdriver
+from selenium.webdriver.support.ui import WebDriverWait
+
+
+@pytest.fixture
+def chrome_browser(request):
+    options = webdriver.ChromeOptions()
+    # options.binary_location = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
+    options.add_argument("start-maximized")
+    wd = webdriver.Chrome(chrome_options=options)
+    request.addfinalizer(wd.quit)
+    return wd
+
+
+def there_is_window_other_than(windows):
+    """
+
+    :param windows:
+    :return:
+    """
+    pass
+
+
+def test_windows(chrome_browser):
+
+    chrome_browser.get("https://otus.ru/")
+    # chrome_browser.execute_script('window.open()')
+    main_window = chrome_browser.current_window_handle
+    old_windows = chrome_browser.window_handles
+    chrome_browser.execute_script('window.open()')  # открывает новое окно
+    # ожидание появления нового окна,
+    # идентификатор которого отсутствует в списке oldWindows,
+    # остаётся в качестве самостоятельного упражнения
+    # wait = WebDriverWait
+    # new_window = wait.until(there_is_window_other_than(old_windows))
+    # chrome_browser.switch_to_window(new_window)
+    new_window = chrome_browser.current_window_handle
+    chrome_browser.switch_to_window(main_window)
+    chrome_browser.close()
+    all_windows = chrome_browser.window_handles
+    chrome_browser.switch_to_window(all_windows[0])
+    chrome_browser.close()
Index: конспекты/o-master/PythonQA/Lesson12/test_logging.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson12/test_logging.py b/конспекты/o-master/PythonQA/Lesson12/test_logging.py
new file mode 100644
--- /dev/null	(date 1722185149248)
+++ b/конспекты/o-master/PythonQA/Lesson12/test_logging.py	(date 1722185149248)
@@ -0,0 +1,41 @@
+import time
+import pytest
+import logging
+from selenium import webdriver
+from selenium.webdriver.support.events import EventFiringWebDriver, AbstractEventListener
+from selenium.webdriver.common.keys import Keys
+
+
+@pytest.fixture
+def chrome_browser(request):
+    options = webdriver.ChromeOptions()
+    options.add_argument("start-maximized")
+    wd = EventFiringWebDriver(webdriver.Chrome(), MyListener())
+    request.addfinalizer(wd.quit)
+    return wd
+
+
+class MyListener(AbstractEventListener):
+
+    def before_find(self, by, value, driver):
+        logging.log()
+        print(by, value)
+
+    def after_find(self, by, value, driver):
+        print(by, value, "found")
+
+    def on_exception(self, exception, driver):
+
+        driver.save_screenshot('screenshots/exception.png')
+        print(exception)
+
+
+def test_logging(chrome_browser):
+    chrome_browser.get('https://habr.com/ru/111')
+    find_button = chrome_browser.find_element_by_id('search-form-btn')
+    find_button.click()
+    find_field = chrome_browser.find_element_by_id('search-form-field')
+    find_field.send_keys('Otus')
+    logging.log('INFO', 'opened list of posts')
+    find_field.send_keys(Keys.ENTER)
+    chrome_browser.save_screenshot('screenshots/finish_test.png')
Index: конспекты/o-master/PythonQA/Lesson12/test_logging_browser.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson12/test_logging_browser.py b/конспекты/o-master/PythonQA/Lesson12/test_logging_browser.py
new file mode 100644
--- /dev/null	(date 1722185149249)
+++ b/конспекты/o-master/PythonQA/Lesson12/test_logging_browser.py	(date 1722185149249)
@@ -0,0 +1,20 @@
+import pytest
+from selenium import webdriver
+
+
+@pytest.fixture
+def chrome_browser(request):
+    options = webdriver.ChromeOptions()
+    options.add_argument("start-maximized")
+    wd = webdriver.Chrome()
+    request.addfinalizer(wd.quit)
+    return wd
+
+
+def test_logging_browser(chrome_browser):
+
+    chrome_browser.get('https://www.searchengines.ru/search-console-fix.html')
+    print(chrome_browser.log_types)
+    for l in chrome_browser.get_log("browser"):
+        print(l)
+
Index: конспекты/o-master/PythonQA/Lesson12/test_performance_log.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson12/test_performance_log.py b/конспекты/o-master/PythonQA/Lesson12/test_performance_log.py
new file mode 100644
--- /dev/null	(date 1722185149250)
+++ b/конспекты/o-master/PythonQA/Lesson12/test_performance_log.py	(date 1722185149250)
@@ -0,0 +1,31 @@
+import datetime
+import pytest
+from selenium import webdriver
+from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
+
+
+@pytest.fixture
+def chrome_browser(request):
+    d = DesiredCapabilities.CHROME
+    d['loggingPrefs'] = {'performance': 'ALL'}
+    wd = webdriver.Chrome(desired_capabilities=d)
+    request.addfinalizer(wd.quit)
+    return wd
+
+
+def test_logging_browser(chrome_browser):
+
+    chrome_browser.get('https://otus.ru/')
+    print(chrome_browser.log_types)
+    lst = chrome_browser.get_log("performance")
+    for l in lst:
+        print(l)
+
+
+
+
+
+
+
+
+    time_to_load = lst[-1].get('timestamp') - lst[0].get('timestamp')
Index: конспекты/o-master/PythonQA/Lesson12/test_proxy.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/конспекты/o-master/PythonQA/Lesson12/test_proxy.py b/конспекты/o-master/PythonQA/Lesson12/test_proxy.py
new file mode 100644
--- /dev/null	(date 1722185149250)
+++ b/конспекты/o-master/PythonQA/Lesson12/test_proxy.py	(date 1722185149250)
@@ -0,0 +1,30 @@
+from browsermobproxy import Server
+import pytest
+import urllib.parse
+from selenium import webdriver
+
+
+server = Server(r"C:\Program Files (x86)\browsermob-proxy-2.1.4\bin\browsermob-proxy")
+server.start()
+
+proxy = server.create_proxy()
+proxy.new_har()
+
+
+@pytest.fixture
+def chrome_browser(request):
+
+    chrome_options = webdriver.ChromeOptions()
+    url = urllib.parse.urlparse(proxy.proxy).path
+    chrome_options.add_argument('--proxy-server=%s' % url)
+    driver = webdriver.Chrome(chrome_options=chrome_options)
+    request.addfinalizer(driver.quit)
+    return driver
+
+
+def test_proxy(chrome_browser):
+    # print(chrome_browser)
+    # driver = chrome_browser['driver']
+    chrome_browser.get('https://otus.ru/')
+    print(' ')
+    print(proxy.har)
